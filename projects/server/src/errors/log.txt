
	===
	Time: Thu Jun 29 2023 21:17:41 GMT+0700 (Western Indonesia Time)
	Source: startAdminAuthenticationErrorHandler
	Error: {}
	
	===
	Time: Thu Jun 29 2023 21:40:17 GMT+0700 (Western Indonesia Time)
	Source: startFindErrorHandler
	Error: {"name":"SequelizeDatabaseError","parent":{"code":"ER_SP_UNDECLARED_VAR","errno":1327,"sqlState":"42000","sqlMessage":"Undeclared variable: NaN","sql":"SELECT `Transactions`.*, `User`.`id` AS `User.id`, `User`.`email` AS `User.email`, `User`.`phone` AS `User.phone`, `User`.`password` AS `User.password`, `User`.`username` AS `User.username`, `User`.`verified` AS `User.verified`, `User`.`referral_code` AS `User.referral_code`, `User`.`referrer` AS `User.referrer`, `User`.`created_at` AS `User.created_at`, `User`.`updated_at` AS `User.updated_at`, `Status`.`id` AS `Status.id`, `Status`.`name` AS `Status.name`, `Branch`.`id` AS `Branch.id`, `Branch`.`admin_id` AS `Branch.admin_id`, `Branch`.`city_id` AS `Branch.city_id`, `Branch`.`name` AS `Branch.name`, `Branch`.`latitude` AS `Branch.latitude`, `Branch`.`longitude` AS `Branch.longitude`, `Proof`.`transaction_id` AS `Proof.transaction_id`, `Proof`.`image` AS `Proof.image`, `Transaction_details`.`id` AS `Transaction_details.id`, `Transaction_details`.`transaction_id` AS `Transaction_details.transaction_id`, `Transaction_details`.`inventory_id` AS `Transaction_details.inventory_id`, `Transaction_details`.`inventory_promotion_id` AS `Transaction_details.inventory_promotion_id`, `Transaction_details`.`name` AS `Transaction_details.name`, `Transaction_details`.`quantity` AS `Transaction_details.quantity`, `Transaction_details`.`price` AS `Transaction_details.price`, `Transaction_details`.`branch_discount` AS `Transaction_details.branch_discount` FROM (SELECT `Transactions`.`id`, `Transactions`.`user_id`, `Transactions`.`branch_id`, `Transactions`.`voucher_id`, `Transactions`.`amount`, `Transactions`.`voucher_discount`, `Transactions`.`status_id`, `Transactions`.`address`, `Transactions`.`created_at`, `Transactions`.`updated_at` FROM `Transactions` AS `Transactions` WHERE (`Transactions`.`created_at` >= '1970-12-31 17:00:00' AND `Transactions`.`created_at` <= '2023-06-29 14:40:17') AND `Transactions`.`branch_id` = 1 ORDER BY `Transactions`.`id` DESC LIMIT NaN, 5) AS `Transactions` LEFT OUTER JOIN `Users` AS `User` ON `Transactions`.`user_id` = `User`.`id` LEFT OUTER JOIN `Statuses` AS `Status` ON `Transactions`.`status_id` = `Status`.`id` LEFT OUTER JOIN `Branches` AS `Branch` ON `Transactions`.`branch_id` = `Branch`.`id` LEFT OUTER JOIN `Proofs` AS `Proof` ON `Transactions`.`id` = `Proof`.`transaction_id` LEFT OUTER JOIN `Transaction_details` AS `Transaction_details` ON `Transactions`.`id` = `Transaction_details`.`transaction_id` ORDER BY `Transactions`.`id` DESC;"},"original":{"code":"ER_SP_UNDECLARED_VAR","errno":1327,"sqlState":"42000","sqlMessage":"Undeclared variable: NaN","sql":"SELECT `Transactions`.*, `User`.`id` AS `User.id`, `User`.`email` AS `User.email`, `User`.`phone` AS `User.phone`, `User`.`password` AS `User.password`, `User`.`username` AS `User.username`, `User`.`verified` AS `User.verified`, `User`.`referral_code` AS `User.referral_code`, `User`.`referrer` AS `User.referrer`, `User`.`created_at` AS `User.created_at`, `User`.`updated_at` AS `User.updated_at`, `Status`.`id` AS `Status.id`, `Status`.`name` AS `Status.name`, `Branch`.`id` AS `Branch.id`, `Branch`.`admin_id` AS `Branch.admin_id`, `Branch`.`city_id` AS `Branch.city_id`, `Branch`.`name` AS `Branch.name`, `Branch`.`latitude` AS `Branch.latitude`, `Branch`.`longitude` AS `Branch.longitude`, `Proof`.`transaction_id` AS `Proof.transaction_id`, `Proof`.`image` AS `Proof.image`, `Transaction_details`.`id` AS `Transaction_details.id`, `Transaction_details`.`transaction_id` AS `Transaction_details.transaction_id`, `Transaction_details`.`inventory_id` AS `Transaction_details.inventory_id`, `Transaction_details`.`inventory_promotion_id` AS `Transaction_details.inventory_promotion_id`, `Transaction_details`.`name` AS `Transaction_details.name`, `Transaction_details`.`quantity` AS `Transaction_details.quantity`, `Transaction_details`.`price` AS `Transaction_details.price`, `Transaction_details`.`branch_discount` AS `Transaction_details.branch_discount` FROM (SELECT `Transactions`.`id`, `Transactions`.`user_id`, `Transactions`.`branch_id`, `Transactions`.`voucher_id`, `Transactions`.`amount`, `Transactions`.`voucher_discount`, `Transactions`.`status_id`, `Transactions`.`address`, `Transactions`.`created_at`, `Transactions`.`updated_at` FROM `Transactions` AS `Transactions` WHERE (`Transactions`.`created_at` >= '1970-12-31 17:00:00' AND `Transactions`.`created_at` <= '2023-06-29 14:40:17') AND `Transactions`.`branch_id` = 1 ORDER BY `Transactions`.`id` DESC LIMIT NaN, 5) AS `Transactions` LEFT OUTER JOIN `Users` AS `User` ON `Transactions`.`user_id` = `User`.`id` LEFT OUTER JOIN `Statuses` AS `Status` ON `Transactions`.`status_id` = `Status`.`id` LEFT OUTER JOIN `Branches` AS `Branch` ON `Transactions`.`branch_id` = `Branch`.`id` LEFT OUTER JOIN `Proofs` AS `Proof` ON `Transactions`.`id` = `Proof`.`transaction_id` LEFT OUTER JOIN `Transaction_details` AS `Transaction_details` ON `Transactions`.`id` = `Transaction_details`.`transaction_id` ORDER BY `Transactions`.`id` DESC;"},"sql":"SELECT `Transactions`.*, `User`.`id` AS `User.id`, `User`.`email` AS `User.email`, `User`.`phone` AS `User.phone`, `User`.`password` AS `User.password`, `User`.`username` AS `User.username`, `User`.`verified` AS `User.verified`, `User`.`referral_code` AS `User.referral_code`, `User`.`referrer` AS `User.referrer`, `User`.`created_at` AS `User.created_at`, `User`.`updated_at` AS `User.updated_at`, `Status`.`id` AS `Status.id`, `Status`.`name` AS `Status.name`, `Branch`.`id` AS `Branch.id`, `Branch`.`admin_id` AS `Branch.admin_id`, `Branch`.`city_id` AS `Branch.city_id`, `Branch`.`name` AS `Branch.name`, `Branch`.`latitude` AS `Branch.latitude`, `Branch`.`longitude` AS `Branch.longitude`, `Proof`.`transaction_id` AS `Proof.transaction_id`, `Proof`.`image` AS `Proof.image`, `Transaction_details`.`id` AS `Transaction_details.id`, `Transaction_details`.`transaction_id` AS `Transaction_details.transaction_id`, `Transaction_details`.`inventory_id` AS `Transaction_details.inventory_id`, `Transaction_details`.`inventory_promotion_id` AS `Transaction_details.inventory_promotion_id`, `Transaction_details`.`name` AS `Transaction_details.name`, `Transaction_details`.`quantity` AS `Transaction_details.quantity`, `Transaction_details`.`price` AS `Transaction_details.price`, `Transaction_details`.`branch_discount` AS `Transaction_details.branch_discount` FROM (SELECT `Transactions`.`id`, `Transactions`.`user_id`, `Transactions`.`branch_id`, `Transactions`.`voucher_id`, `Transactions`.`amount`, `Transactions`.`voucher_discount`, `Transactions`.`status_id`, `Transactions`.`address`, `Transactions`.`created_at`, `Transactions`.`updated_at` FROM `Transactions` AS `Transactions` WHERE (`Transactions`.`created_at` >= '1970-12-31 17:00:00' AND `Transactions`.`created_at` <= '2023-06-29 14:40:17') AND `Transactions`.`branch_id` = 1 ORDER BY `Transactions`.`id` DESC LIMIT NaN, 5) AS `Transactions` LEFT OUTER JOIN `Users` AS `User` ON `Transactions`.`user_id` = `User`.`id` LEFT OUTER JOIN `Statuses` AS `Status` ON `Transactions`.`status_id` = `Status`.`id` LEFT OUTER JOIN `Branches` AS `Branch` ON `Transactions`.`branch_id` = `Branch`.`id` LEFT OUTER JOIN `Proofs` AS `Proof` ON `Transactions`.`id` = `Proof`.`transaction_id` LEFT OUTER JOIN `Transaction_details` AS `Transaction_details` ON `Transactions`.`id` = `Transaction_details`.`transaction_id` ORDER BY `Transactions`.`id` DESC;","parameters":{}}
	
	===
	Time: Thu Jun 29 2023 21:40:25 GMT+0700 (Western Indonesia Time)
	Source: startFindErrorHandler
	Error: {"name":"SequelizeDatabaseError","parent":{"code":"ER_SP_UNDECLARED_VAR","errno":1327,"sqlState":"42000","sqlMessage":"Undeclared variable: NaN","sql":"SELECT `Transactions`.*, `User`.`id` AS `User.id`, `User`.`email` AS `User.email`, `User`.`phone` AS `User.phone`, `User`.`password` AS `User.password`, `User`.`username` AS `User.username`, `User`.`verified` AS `User.verified`, `User`.`referral_code` AS `User.referral_code`, `User`.`referrer` AS `User.referrer`, `User`.`created_at` AS `User.created_at`, `User`.`updated_at` AS `User.updated_at`, `Status`.`id` AS `Status.id`, `Status`.`name` AS `Status.name`, `Branch`.`id` AS `Branch.id`, `Branch`.`admin_id` AS `Branch.admin_id`, `Branch`.`city_id` AS `Branch.city_id`, `Branch`.`name` AS `Branch.name`, `Branch`.`latitude` AS `Branch.latitude`, `Branch`.`longitude` AS `Branch.longitude`, `Proof`.`transaction_id` AS `Proof.transaction_id`, `Proof`.`image` AS `Proof.image`, `Transaction_details`.`id` AS `Transaction_details.id`, `Transaction_details`.`transaction_id` AS `Transaction_details.transaction_id`, `Transaction_details`.`inventory_id` AS `Transaction_details.inventory_id`, `Transaction_details`.`inventory_promotion_id` AS `Transaction_details.inventory_promotion_id`, `Transaction_details`.`name` AS `Transaction_details.name`, `Transaction_details`.`quantity` AS `Transaction_details.quantity`, `Transaction_details`.`price` AS `Transaction_details.price`, `Transaction_details`.`branch_discount` AS `Transaction_details.branch_discount` FROM (SELECT `Transactions`.`id`, `Transactions`.`user_id`, `Transactions`.`branch_id`, `Transactions`.`voucher_id`, `Transactions`.`amount`, `Transactions`.`voucher_discount`, `Transactions`.`status_id`, `Transactions`.`address`, `Transactions`.`created_at`, `Transactions`.`updated_at` FROM `Transactions` AS `Transactions` WHERE (`Transactions`.`created_at` >= '1970-12-31 17:00:00' AND `Transactions`.`created_at` <= '2023-06-29 14:40:25') AND `Transactions`.`branch_id` = 1 ORDER BY `Transactions`.`id` DESC LIMIT NaN, 5) AS `Transactions` LEFT OUTER JOIN `Users` AS `User` ON `Transactions`.`user_id` = `User`.`id` LEFT OUTER JOIN `Statuses` AS `Status` ON `Transactions`.`status_id` = `Status`.`id` LEFT OUTER JOIN `Branches` AS `Branch` ON `Transactions`.`branch_id` = `Branch`.`id` LEFT OUTER JOIN `Proofs` AS `Proof` ON `Transactions`.`id` = `Proof`.`transaction_id` LEFT OUTER JOIN `Transaction_details` AS `Transaction_details` ON `Transactions`.`id` = `Transaction_details`.`transaction_id` ORDER BY `Transactions`.`id` DESC;"},"original":{"code":"ER_SP_UNDECLARED_VAR","errno":1327,"sqlState":"42000","sqlMessage":"Undeclared variable: NaN","sql":"SELECT `Transactions`.*, `User`.`id` AS `User.id`, `User`.`email` AS `User.email`, `User`.`phone` AS `User.phone`, `User`.`password` AS `User.password`, `User`.`username` AS `User.username`, `User`.`verified` AS `User.verified`, `User`.`referral_code` AS `User.referral_code`, `User`.`referrer` AS `User.referrer`, `User`.`created_at` AS `User.created_at`, `User`.`updated_at` AS `User.updated_at`, `Status`.`id` AS `Status.id`, `Status`.`name` AS `Status.name`, `Branch`.`id` AS `Branch.id`, `Branch`.`admin_id` AS `Branch.admin_id`, `Branch`.`city_id` AS `Branch.city_id`, `Branch`.`name` AS `Branch.name`, `Branch`.`latitude` AS `Branch.latitude`, `Branch`.`longitude` AS `Branch.longitude`, `Proof`.`transaction_id` AS `Proof.transaction_id`, `Proof`.`image` AS `Proof.image`, `Transaction_details`.`id` AS `Transaction_details.id`, `Transaction_details`.`transaction_id` AS `Transaction_details.transaction_id`, `Transaction_details`.`inventory_id` AS `Transaction_details.inventory_id`, `Transaction_details`.`inventory_promotion_id` AS `Transaction_details.inventory_promotion_id`, `Transaction_details`.`name` AS `Transaction_details.name`, `Transaction_details`.`quantity` AS `Transaction_details.quantity`, `Transaction_details`.`price` AS `Transaction_details.price`, `Transaction_details`.`branch_discount` AS `Transaction_details.branch_discount` FROM (SELECT `Transactions`.`id`, `Transactions`.`user_id`, `Transactions`.`branch_id`, `Transactions`.`voucher_id`, `Transactions`.`amount`, `Transactions`.`voucher_discount`, `Transactions`.`status_id`, `Transactions`.`address`, `Transactions`.`created_at`, `Transactions`.`updated_at` FROM `Transactions` AS `Transactions` WHERE (`Transactions`.`created_at` >= '1970-12-31 17:00:00' AND `Transactions`.`created_at` <= '2023-06-29 14:40:25') AND `Transactions`.`branch_id` = 1 ORDER BY `Transactions`.`id` DESC LIMIT NaN, 5) AS `Transactions` LEFT OUTER JOIN `Users` AS `User` ON `Transactions`.`user_id` = `User`.`id` LEFT OUTER JOIN `Statuses` AS `Status` ON `Transactions`.`status_id` = `Status`.`id` LEFT OUTER JOIN `Branches` AS `Branch` ON `Transactions`.`branch_id` = `Branch`.`id` LEFT OUTER JOIN `Proofs` AS `Proof` ON `Transactions`.`id` = `Proof`.`transaction_id` LEFT OUTER JOIN `Transaction_details` AS `Transaction_details` ON `Transactions`.`id` = `Transaction_details`.`transaction_id` ORDER BY `Transactions`.`id` DESC;"},"sql":"SELECT `Transactions`.*, `User`.`id` AS `User.id`, `User`.`email` AS `User.email`, `User`.`phone` AS `User.phone`, `User`.`password` AS `User.password`, `User`.`username` AS `User.username`, `User`.`verified` AS `User.verified`, `User`.`referral_code` AS `User.referral_code`, `User`.`referrer` AS `User.referrer`, `User`.`created_at` AS `User.created_at`, `User`.`updated_at` AS `User.updated_at`, `Status`.`id` AS `Status.id`, `Status`.`name` AS `Status.name`, `Branch`.`id` AS `Branch.id`, `Branch`.`admin_id` AS `Branch.admin_id`, `Branch`.`city_id` AS `Branch.city_id`, `Branch`.`name` AS `Branch.name`, `Branch`.`latitude` AS `Branch.latitude`, `Branch`.`longitude` AS `Branch.longitude`, `Proof`.`transaction_id` AS `Proof.transaction_id`, `Proof`.`image` AS `Proof.image`, `Transaction_details`.`id` AS `Transaction_details.id`, `Transaction_details`.`transaction_id` AS `Transaction_details.transaction_id`, `Transaction_details`.`inventory_id` AS `Transaction_details.inventory_id`, `Transaction_details`.`inventory_promotion_id` AS `Transaction_details.inventory_promotion_id`, `Transaction_details`.`name` AS `Transaction_details.name`, `Transaction_details`.`quantity` AS `Transaction_details.quantity`, `Transaction_details`.`price` AS `Transaction_details.price`, `Transaction_details`.`branch_discount` AS `Transaction_details.branch_discount` FROM (SELECT `Transactions`.`id`, `Transactions`.`user_id`, `Transactions`.`branch_id`, `Transactions`.`voucher_id`, `Transactions`.`amount`, `Transactions`.`voucher_discount`, `Transactions`.`status_id`, `Transactions`.`address`, `Transactions`.`created_at`, `Transactions`.`updated_at` FROM `Transactions` AS `Transactions` WHERE (`Transactions`.`created_at` >= '1970-12-31 17:00:00' AND `Transactions`.`created_at` <= '2023-06-29 14:40:25') AND `Transactions`.`branch_id` = 1 ORDER BY `Transactions`.`id` DESC LIMIT NaN, 5) AS `Transactions` LEFT OUTER JOIN `Users` AS `User` ON `Transactions`.`user_id` = `User`.`id` LEFT OUTER JOIN `Statuses` AS `Status` ON `Transactions`.`status_id` = `Status`.`id` LEFT OUTER JOIN `Branches` AS `Branch` ON `Transactions`.`branch_id` = `Branch`.`id` LEFT OUTER JOIN `Proofs` AS `Proof` ON `Transactions`.`id` = `Proof`.`transaction_id` LEFT OUTER JOIN `Transaction_details` AS `Transaction_details` ON `Transactions`.`id` = `Transaction_details`.`transaction_id` ORDER BY `Transactions`.`id` DESC;","parameters":{}}
	
	===
	Time: Thu Jun 29 2023 21:40:59 GMT+0700 (Western Indonesia Time)
	Source: startFindErrorHandler
	Error: {"name":"SequelizeDatabaseError","parent":{"code":"ER_PARSE_ERROR","errno":1064,"sqlState":"42000","sqlMessage":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-5, 5) AS `Transactions` LEFT OUTER JOIN `Users` AS `User` ON `Transactions`.`us' at line 1","sql":"SELECT `Transactions`.*, `User`.`id` AS `User.id`, `User`.`email` AS `User.email`, `User`.`phone` AS `User.phone`, `User`.`password` AS `User.password`, `User`.`username` AS `User.username`, `User`.`verified` AS `User.verified`, `User`.`referral_code` AS `User.referral_code`, `User`.`referrer` AS `User.referrer`, `User`.`created_at` AS `User.created_at`, `User`.`updated_at` AS `User.updated_at`, `Status`.`id` AS `Status.id`, `Status`.`name` AS `Status.name`, `Branch`.`id` AS `Branch.id`, `Branch`.`admin_id` AS `Branch.admin_id`, `Branch`.`city_id` AS `Branch.city_id`, `Branch`.`name` AS `Branch.name`, `Branch`.`latitude` AS `Branch.latitude`, `Branch`.`longitude` AS `Branch.longitude`, `Proof`.`transaction_id` AS `Proof.transaction_id`, `Proof`.`image` AS `Proof.image`, `Transaction_details`.`id` AS `Transaction_details.id`, `Transaction_details`.`transaction_id` AS `Transaction_details.transaction_id`, `Transaction_details`.`inventory_id` AS `Transaction_details.inventory_id`, `Transaction_details`.`inventory_promotion_id` AS `Transaction_details.inventory_promotion_id`, `Transaction_details`.`name` AS `Transaction_details.name`, `Transaction_details`.`quantity` AS `Transaction_details.quantity`, `Transaction_details`.`price` AS `Transaction_details.price`, `Transaction_details`.`branch_discount` AS `Transaction_details.branch_discount` FROM (SELECT `Transactions`.`id`, `Transactions`.`user_id`, `Transactions`.`branch_id`, `Transactions`.`voucher_id`, `Transactions`.`amount`, `Transactions`.`voucher_discount`, `Transactions`.`status_id`, `Transactions`.`address`, `Transactions`.`created_at`, `Transactions`.`updated_at` FROM `Transactions` AS `Transactions` WHERE (`Transactions`.`created_at` >= '1970-12-31 17:00:00' AND `Transactions`.`created_at` <= '2023-06-29 14:40:59') AND `Transactions`.`id` = '4' AND `Transactions`.`branch_id` = 1 ORDER BY `Transactions`.`id` DESC LIMIT -5, 5) AS `Transactions` LEFT OUTER JOIN `Users` AS `User` ON `Transactions`.`user_id` = `User`.`id` LEFT OUTER JOIN `Statuses` AS `Status` ON `Transactions`.`status_id` = `Status`.`id` LEFT OUTER JOIN `Branches` AS `Branch` ON `Transactions`.`branch_id` = `Branch`.`id` LEFT OUTER JOIN `Proofs` AS `Proof` ON `Transactions`.`id` = `Proof`.`transaction_id` LEFT OUTER JOIN `Transaction_details` AS `Transaction_details` ON `Transactions`.`id` = `Transaction_details`.`transaction_id` ORDER BY `Transactions`.`id` DESC;"},"original":{"code":"ER_PARSE_ERROR","errno":1064,"sqlState":"42000","sqlMessage":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '-5, 5) AS `Transactions` LEFT OUTER JOIN `Users` AS `User` ON `Transactions`.`us' at line 1","sql":"SELECT `Transactions`.*, `User`.`id` AS `User.id`, `User`.`email` AS `User.email`, `User`.`phone` AS `User.phone`, `User`.`password` AS `User.password`, `User`.`username` AS `User.username`, `User`.`verified` AS `User.verified`, `User`.`referral_code` AS `User.referral_code`, `User`.`referrer` AS `User.referrer`, `User`.`created_at` AS `User.created_at`, `User`.`updated_at` AS `User.updated_at`, `Status`.`id` AS `Status.id`, `Status`.`name` AS `Status.name`, `Branch`.`id` AS `Branch.id`, `Branch`.`admin_id` AS `Branch.admin_id`, `Branch`.`city_id` AS `Branch.city_id`, `Branch`.`name` AS `Branch.name`, `Branch`.`latitude` AS `Branch.latitude`, `Branch`.`longitude` AS `Branch.longitude`, `Proof`.`transaction_id` AS `Proof.transaction_id`, `Proof`.`image` AS `Proof.image`, `Transaction_details`.`id` AS `Transaction_details.id`, `Transaction_details`.`transaction_id` AS `Transaction_details.transaction_id`, `Transaction_details`.`inventory_id` AS `Transaction_details.inventory_id`, `Transaction_details`.`inventory_promotion_id` AS `Transaction_details.inventory_promotion_id`, `Transaction_details`.`name` AS `Transaction_details.name`, `Transaction_details`.`quantity` AS `Transaction_details.quantity`, `Transaction_details`.`price` AS `Transaction_details.price`, `Transaction_details`.`branch_discount` AS `Transaction_details.branch_discount` FROM (SELECT `Transactions`.`id`, `Transactions`.`user_id`, `Transactions`.`branch_id`, `Transactions`.`voucher_id`, `Transactions`.`amount`, `Transactions`.`voucher_discount`, `Transactions`.`status_id`, `Transactions`.`address`, `Transactions`.`created_at`, `Transactions`.`updated_at` FROM `Transactions` AS `Transactions` WHERE (`Transactions`.`created_at` >= '1970-12-31 17:00:00' AND `Transactions`.`created_at` <= '2023-06-29 14:40:59') AND `Transactions`.`id` = '4' AND `Transactions`.`branch_id` = 1 ORDER BY `Transactions`.`id` DESC LIMIT -5, 5) AS `Transactions` LEFT OUTER JOIN `Users` AS `User` ON `Transactions`.`user_id` = `User`.`id` LEFT OUTER JOIN `Statuses` AS `Status` ON `Transactions`.`status_id` = `Status`.`id` LEFT OUTER JOIN `Branches` AS `Branch` ON `Transactions`.`branch_id` = `Branch`.`id` LEFT OUTER JOIN `Proofs` AS `Proof` ON `Transactions`.`id` = `Proof`.`transaction_id` LEFT OUTER JOIN `Transaction_details` AS `Transaction_details` ON `Transactions`.`id` = `Transaction_details`.`transaction_id` ORDER BY `Transactions`.`id` DESC;"},"sql":"SELECT `Transactions`.*, `User`.`id` AS `User.id`, `User`.`email` AS `User.email`, `User`.`phone` AS `User.phone`, `User`.`password` AS `User.password`, `User`.`username` AS `User.username`, `User`.`verified` AS `User.verified`, `User`.`referral_code` AS `User.referral_code`, `User`.`referrer` AS `User.referrer`, `User`.`created_at` AS `User.created_at`, `User`.`updated_at` AS `User.updated_at`, `Status`.`id` AS `Status.id`, `Status`.`name` AS `Status.name`, `Branch`.`id` AS `Branch.id`, `Branch`.`admin_id` AS `Branch.admin_id`, `Branch`.`city_id` AS `Branch.city_id`, `Branch`.`name` AS `Branch.name`, `Branch`.`latitude` AS `Branch.latitude`, `Branch`.`longitude` AS `Branch.longitude`, `Proof`.`transaction_id` AS `Proof.transaction_id`, `Proof`.`image` AS `Proof.image`, `Transaction_details`.`id` AS `Transaction_details.id`, `Transaction_details`.`transaction_id` AS `Transaction_details.transaction_id`, `Transaction_details`.`inventory_id` AS `Transaction_details.inventory_id`, `Transaction_details`.`inventory_promotion_id` AS `Transaction_details.inventory_promotion_id`, `Transaction_details`.`name` AS `Transaction_details.name`, `Transaction_details`.`quantity` AS `Transaction_details.quantity`, `Transaction_details`.`price` AS `Transaction_details.price`, `Transaction_details`.`branch_discount` AS `Transaction_details.branch_discount` FROM (SELECT `Transactions`.`id`, `Transactions`.`user_id`, `Transactions`.`branch_id`, `Transactions`.`voucher_id`, `Transactions`.`amount`, `Transactions`.`voucher_discount`, `Transactions`.`status_id`, `Transactions`.`address`, `Transactions`.`created_at`, `Transactions`.`updated_at` FROM `Transactions` AS `Transactions` WHERE (`Transactions`.`created_at` >= '1970-12-31 17:00:00' AND `Transactions`.`created_at` <= '2023-06-29 14:40:59') AND `Transactions`.`id` = '4' AND `Transactions`.`branch_id` = 1 ORDER BY `Transactions`.`id` DESC LIMIT -5, 5) AS `Transactions` LEFT OUTER JOIN `Users` AS `User` ON `Transactions`.`user_id` = `User`.`id` LEFT OUTER JOIN `Statuses` AS `Status` ON `Transactions`.`status_id` = `Status`.`id` LEFT OUTER JOIN `Branches` AS `Branch` ON `Transactions`.`branch_id` = `Branch`.`id` LEFT OUTER JOIN `Proofs` AS `Proof` ON `Transactions`.`id` = `Proof`.`transaction_id` LEFT OUTER JOIN `Transaction_details` AS `Transaction_details` ON `Transactions`.`id` = `Transaction_details`.`transaction_id` ORDER BY `Transactions`.`id` DESC;","parameters":{}}
	
	===
	Time: Thu Jun 29 2023 21:41:38 GMT+0700 (Western Indonesia Time)
	Source: startFindErrorHandler
	Error: {"name":"SequelizeDatabaseError","parent":{"code":"ER_SP_UNDECLARED_VAR","errno":1327,"sqlState":"42000","sqlMessage":"Undeclared variable: NaN","sql":"SELECT `Transactions`.*, `User`.`id` AS `User.id`, `User`.`email` AS `User.email`, `User`.`phone` AS `User.phone`, `User`.`password` AS `User.password`, `User`.`username` AS `User.username`, `User`.`verified` AS `User.verified`, `User`.`referral_code` AS `User.referral_code`, `User`.`referrer` AS `User.referrer`, `User`.`created_at` AS `User.created_at`, `User`.`updated_at` AS `User.updated_at`, `Status`.`id` AS `Status.id`, `Status`.`name` AS `Status.name`, `Branch`.`id` AS `Branch.id`, `Branch`.`admin_id` AS `Branch.admin_id`, `Branch`.`city_id` AS `Branch.city_id`, `Branch`.`name` AS `Branch.name`, `Branch`.`latitude` AS `Branch.latitude`, `Branch`.`longitude` AS `Branch.longitude`, `Proof`.`transaction_id` AS `Proof.transaction_id`, `Proof`.`image` AS `Proof.image`, `Transaction_details`.`id` AS `Transaction_details.id`, `Transaction_details`.`transaction_id` AS `Transaction_details.transaction_id`, `Transaction_details`.`inventory_id` AS `Transaction_details.inventory_id`, `Transaction_details`.`inventory_promotion_id` AS `Transaction_details.inventory_promotion_id`, `Transaction_details`.`name` AS `Transaction_details.name`, `Transaction_details`.`quantity` AS `Transaction_details.quantity`, `Transaction_details`.`price` AS `Transaction_details.price`, `Transaction_details`.`branch_discount` AS `Transaction_details.branch_discount` FROM (SELECT `Transactions`.`id`, `Transactions`.`user_id`, `Transactions`.`branch_id`, `Transactions`.`voucher_id`, `Transactions`.`amount`, `Transactions`.`voucher_discount`, `Transactions`.`status_id`, `Transactions`.`address`, `Transactions`.`created_at`, `Transactions`.`updated_at` FROM `Transactions` AS `Transactions` WHERE (`Transactions`.`created_at` >= '1970-12-31 17:00:00' AND `Transactions`.`created_at` <= '2023-06-29 14:41:38') AND `Transactions`.`branch_id` = 1 ORDER BY `Transactions`.`id` DESC LIMIT NaN, 5) AS `Transactions` LEFT OUTER JOIN `Users` AS `User` ON `Transactions`.`user_id` = `User`.`id` LEFT OUTER JOIN `Statuses` AS `Status` ON `Transactions`.`status_id` = `Status`.`id` LEFT OUTER JOIN `Branches` AS `Branch` ON `Transactions`.`branch_id` = `Branch`.`id` LEFT OUTER JOIN `Proofs` AS `Proof` ON `Transactions`.`id` = `Proof`.`transaction_id` LEFT OUTER JOIN `Transaction_details` AS `Transaction_details` ON `Transactions`.`id` = `Transaction_details`.`transaction_id` ORDER BY `Transactions`.`id` DESC;"},"original":{"code":"ER_SP_UNDECLARED_VAR","errno":1327,"sqlState":"42000","sqlMessage":"Undeclared variable: NaN","sql":"SELECT `Transactions`.*, `User`.`id` AS `User.id`, `User`.`email` AS `User.email`, `User`.`phone` AS `User.phone`, `User`.`password` AS `User.password`, `User`.`username` AS `User.username`, `User`.`verified` AS `User.verified`, `User`.`referral_code` AS `User.referral_code`, `User`.`referrer` AS `User.referrer`, `User`.`created_at` AS `User.created_at`, `User`.`updated_at` AS `User.updated_at`, `Status`.`id` AS `Status.id`, `Status`.`name` AS `Status.name`, `Branch`.`id` AS `Branch.id`, `Branch`.`admin_id` AS `Branch.admin_id`, `Branch`.`city_id` AS `Branch.city_id`, `Branch`.`name` AS `Branch.name`, `Branch`.`latitude` AS `Branch.latitude`, `Branch`.`longitude` AS `Branch.longitude`, `Proof`.`transaction_id` AS `Proof.transaction_id`, `Proof`.`image` AS `Proof.image`, `Transaction_details`.`id` AS `Transaction_details.id`, `Transaction_details`.`transaction_id` AS `Transaction_details.transaction_id`, `Transaction_details`.`inventory_id` AS `Transaction_details.inventory_id`, `Transaction_details`.`inventory_promotion_id` AS `Transaction_details.inventory_promotion_id`, `Transaction_details`.`name` AS `Transaction_details.name`, `Transaction_details`.`quantity` AS `Transaction_details.quantity`, `Transaction_details`.`price` AS `Transaction_details.price`, `Transaction_details`.`branch_discount` AS `Transaction_details.branch_discount` FROM (SELECT `Transactions`.`id`, `Transactions`.`user_id`, `Transactions`.`branch_id`, `Transactions`.`voucher_id`, `Transactions`.`amount`, `Transactions`.`voucher_discount`, `Transactions`.`status_id`, `Transactions`.`address`, `Transactions`.`created_at`, `Transactions`.`updated_at` FROM `Transactions` AS `Transactions` WHERE (`Transactions`.`created_at` >= '1970-12-31 17:00:00' AND `Transactions`.`created_at` <= '2023-06-29 14:41:38') AND `Transactions`.`branch_id` = 1 ORDER BY `Transactions`.`id` DESC LIMIT NaN, 5) AS `Transactions` LEFT OUTER JOIN `Users` AS `User` ON `Transactions`.`user_id` = `User`.`id` LEFT OUTER JOIN `Statuses` AS `Status` ON `Transactions`.`status_id` = `Status`.`id` LEFT OUTER JOIN `Branches` AS `Branch` ON `Transactions`.`branch_id` = `Branch`.`id` LEFT OUTER JOIN `Proofs` AS `Proof` ON `Transactions`.`id` = `Proof`.`transaction_id` LEFT OUTER JOIN `Transaction_details` AS `Transaction_details` ON `Transactions`.`id` = `Transaction_details`.`transaction_id` ORDER BY `Transactions`.`id` DESC;"},"sql":"SELECT `Transactions`.*, `User`.`id` AS `User.id`, `User`.`email` AS `User.email`, `User`.`phone` AS `User.phone`, `User`.`password` AS `User.password`, `User`.`username` AS `User.username`, `User`.`verified` AS `User.verified`, `User`.`referral_code` AS `User.referral_code`, `User`.`referrer` AS `User.referrer`, `User`.`created_at` AS `User.created_at`, `User`.`updated_at` AS `User.updated_at`, `Status`.`id` AS `Status.id`, `Status`.`name` AS `Status.name`, `Branch`.`id` AS `Branch.id`, `Branch`.`admin_id` AS `Branch.admin_id`, `Branch`.`city_id` AS `Branch.city_id`, `Branch`.`name` AS `Branch.name`, `Branch`.`latitude` AS `Branch.latitude`, `Branch`.`longitude` AS `Branch.longitude`, `Proof`.`transaction_id` AS `Proof.transaction_id`, `Proof`.`image` AS `Proof.image`, `Transaction_details`.`id` AS `Transaction_details.id`, `Transaction_details`.`transaction_id` AS `Transaction_details.transaction_id`, `Transaction_details`.`inventory_id` AS `Transaction_details.inventory_id`, `Transaction_details`.`inventory_promotion_id` AS `Transaction_details.inventory_promotion_id`, `Transaction_details`.`name` AS `Transaction_details.name`, `Transaction_details`.`quantity` AS `Transaction_details.quantity`, `Transaction_details`.`price` AS `Transaction_details.price`, `Transaction_details`.`branch_discount` AS `Transaction_details.branch_discount` FROM (SELECT `Transactions`.`id`, `Transactions`.`user_id`, `Transactions`.`branch_id`, `Transactions`.`voucher_id`, `Transactions`.`amount`, `Transactions`.`voucher_discount`, `Transactions`.`status_id`, `Transactions`.`address`, `Transactions`.`created_at`, `Transactions`.`updated_at` FROM `Transactions` AS `Transactions` WHERE (`Transactions`.`created_at` >= '1970-12-31 17:00:00' AND `Transactions`.`created_at` <= '2023-06-29 14:41:38') AND `Transactions`.`branch_id` = 1 ORDER BY `Transactions`.`id` DESC LIMIT NaN, 5) AS `Transactions` LEFT OUTER JOIN `Users` AS `User` ON `Transactions`.`user_id` = `User`.`id` LEFT OUTER JOIN `Statuses` AS `Status` ON `Transactions`.`status_id` = `Status`.`id` LEFT OUTER JOIN `Branches` AS `Branch` ON `Transactions`.`branch_id` = `Branch`.`id` LEFT OUTER JOIN `Proofs` AS `Proof` ON `Transactions`.`id` = `Proof`.`transaction_id` LEFT OUTER JOIN `Transaction_details` AS `Transaction_details` ON `Transactions`.`id` = `Transaction_details`.`transaction_id` ORDER BY `Transactions`.`id` DESC;","parameters":{}}
	
	===
	Time: Thu Jun 29 2023 21:50:58 GMT+0700 (Western Indonesia Time)
	Source: startUpdateErrorHandler
	Error: "ERR_UNAUTHORIZED"
	
	===
	Time: Thu Jun 29 2023 21:54:01 GMT+0700 (Western Indonesia Time)
	Source: startUpdateErrorHandler
	Error: "ERR_UNAUTHORIZED"
	
	===
	Time: Thu Jun 29 2023 21:55:31 GMT+0700 (Western Indonesia Time)
	Source: startUpdateErrorHandler
	Error: "ERR_UNAUTHORIZED"
	
	===
	Time: Thu Jun 29 2023 21:55:49 GMT+0700 (Western Indonesia Time)
	Source: startUpdateErrorHandler
	Error: "ERR_UNAUTHORIZED"
	
	===
	Time: Thu Jun 29 2023 21:55:51 GMT+0700 (Western Indonesia Time)
	Source: startUpdateErrorHandler
	Error: "ERR_UNAUTHORIZED"
	
	===
	Time: Thu Jun 29 2023 21:55:54 GMT+0700 (Western Indonesia Time)
	Source: startUpdateErrorHandler
	Error: "ERR_UNAUTHORIZED"
	
	===
	Time: Thu Jun 29 2023 22:00:52 GMT+0700 (Western Indonesia Time)
	Source: startUpdateErrorHandler
	Error: "ERR_UNAUTHORIZED"
	
	===
	Time: Thu Jun 29 2023 22:00:53 GMT+0700 (Western Indonesia Time)
	Source: startUpdateErrorHandler
	Error: "ERR_UNAUTHORIZED"
	
	===
	Time: Thu Jun 29 2023 22:01:09 GMT+0700 (Western Indonesia Time)
	Source: startUpdateErrorHandler
	Error: "ERR_UNAUTHORIZED"
	
	===
	Time: Thu Jun 29 2023 22:01:10 GMT+0700 (Western Indonesia Time)
	Source: startUpdateErrorHandler
	Error: "ERR_UNAUTHORIZED"
	
	===
	Time: Thu Jun 29 2023 22:01:31 GMT+0700 (Western Indonesia Time)
	Source: startUpdateErrorHandler
	Error: "ERR_UNAUTHORIZED"
	
	===
	Time: Thu Jun 29 2023 22:01:32 GMT+0700 (Western Indonesia Time)
	Source: startUpdateErrorHandler
	Error: "ERR_UNAUTHORIZED"
	
	===
	Time: Thu Jun 29 2023 22:10:58 GMT+0700 (Western Indonesia Time)
	Source: startUpdateErrorHandler
	Error: "ERR_UNAUTHORIZED"
	
	===
	Time: Thu Jun 29 2023 22:11:11 GMT+0700 (Western Indonesia Time)
	Source: startUpdateErrorHandler
	Error: "ERR_UNAUTHORIZED"
	
	===
	Time: Thu Jun 29 2023 22:11:28 GMT+0700 (Western Indonesia Time)
	Source: startUpdateErrorHandler
	Error: "ERR_UNAUTHORIZED"
	
	===
	Time: Thu Jun 29 2023 22:11:40 GMT+0700 (Western Indonesia Time)
	Source: startUpdateErrorHandler
	Error: "ERR_UNAUTHORIZED"
	
	===
	Time: Thu Jun 29 2023 22:11:49 GMT+0700 (Western Indonesia Time)
	Source: startUpdateErrorHandler
	Error: "ERR_UNAUTHORIZED"
	
	===
	Time: Fri Jun 30 2023 19:45:05 GMT+0700 (Western Indonesia Time)
	Source: startUpdateErrorHandler
	Error: "ERR_UNAUTHORIZED"
	
	===
	Time: Sun Jul 02 2023 14:24:08 GMT+0700 (Western Indonesia Time)
	Source: startUpdateErrorHandler
	Error: "ERR_UNAUTHORIZED"
	
	===
	Time: Wed Jul 05 2023 08:00:46 GMT+0700 (Western Indonesia Time)
	Source: startFindErrorHandler
	Error: {}
	
	===
	Time: Wed Jul 05 2023 08:01:12 GMT+0700 (Western Indonesia Time)
	Source: startFindErrorHandler
	Error: {}
	
	===
	Time: Wed Jul 05 2023 08:01:44 GMT+0700 (Western Indonesia Time)
	Source: startFindErrorHandler
	Error: {}
	
	===
	Time: Wed Jul 05 2023 08:01:46 GMT+0700 (Western Indonesia Time)
	Source: startFindErrorHandler
	Error: {}
	
	===
	Time: Wed Jul 05 2023 08:02:26 GMT+0700 (Western Indonesia Time)
	Source: startFindErrorHandler
	Error: {}
	
	===
	Time: Wed Jul 05 2023 08:02:33 GMT+0700 (Western Indonesia Time)
	Source: startFindErrorHandler
	Error: {}
	
	===
	Time: Wed Jul 05 2023 08:02:35 GMT+0700 (Western Indonesia Time)
	Source: startFindErrorHandler
	Error: {}
	
	===
	Time: Wed Jul 05 2023 08:30:44 GMT+0700 (Western Indonesia Time)
	Source: startFindErrorHandler
	Error: {}
	
	===
	Time: Wed Jul 05 2023 18:20:05 GMT+0700 (Western Indonesia Time)
	Source: startFindErrorHandler
	Error: {}
	
	===
	Time: Wed Jul 05 2023 18:20:26 GMT+0700 (Western Indonesia Time)
	Source: startFindErrorHandler
	Error: {}
	
	===
	Time: Wed Jul 05 2023 19:49:26 GMT+0700 (Western Indonesia Time)
	Source: startFindErrorHandler
	Error: {"name":"SequelizeDatabaseError","parent":{"code":"ER_SP_UNDECLARED_VAR","errno":1327,"sqlState":"42000","sqlMessage":"Undeclared variable: NaN","sql":"SELECT `id`, `name`, `image` FROM `Categories` AS `Categories` WHERE `Categories`.`name` LIKE '%[object Object]%' LIMIT NaN, 10000000000000;"},"original":{"code":"ER_SP_UNDECLARED_VAR","errno":1327,"sqlState":"42000","sqlMessage":"Undeclared variable: NaN","sql":"SELECT `id`, `name`, `image` FROM `Categories` AS `Categories` WHERE `Categories`.`name` LIKE '%[object Object]%' LIMIT NaN, 10000000000000;"},"sql":"SELECT `id`, `name`, `image` FROM `Categories` AS `Categories` WHERE `Categories`.`name` LIKE '%[object Object]%' LIMIT NaN, 10000000000000;","parameters":{}}
	
	===
	Time: Wed Jul 05 2023 19:51:05 GMT+0700 (Western Indonesia Time)
	Source: startFindErrorHandler
	Error: {"name":"SequelizeDatabaseError","parent":{"code":"ER_SP_UNDECLARED_VAR","errno":1327,"sqlState":"42000","sqlMessage":"Undeclared variable: NaN","sql":"SELECT `id`, `name`, `image` FROM `Categories` AS `Categories` WHERE `Categories`.`name` LIKE '%[object Object]%' LIMIT NaN, 10000000000000;"},"original":{"code":"ER_SP_UNDECLARED_VAR","errno":1327,"sqlState":"42000","sqlMessage":"Undeclared variable: NaN","sql":"SELECT `id`, `name`, `image` FROM `Categories` AS `Categories` WHERE `Categories`.`name` LIKE '%[object Object]%' LIMIT NaN, 10000000000000;"},"sql":"SELECT `id`, `name`, `image` FROM `Categories` AS `Categories` WHERE `Categories`.`name` LIKE '%[object Object]%' LIMIT NaN, 10000000000000;","parameters":{}}
	
	===
	Time: Wed Jul 05 2023 21:56:49 GMT+0700 (Western Indonesia Time)
	Source: startCreateErrorHandler
	Error: {}
	
	===
	Time: Wed Jul 05 2023 21:58:21 GMT+0700 (Western Indonesia Time)
	Source: startCreateErrorHandler
	Error: {}
	
	===
	Time: Wed Jul 05 2023 22:00:05 GMT+0700 (Western Indonesia Time)
	Source: startCreateErrorHandler
	Error: {}
	
	===
	Time: Wed Jul 05 2023 22:07:25 GMT+0700 (Western Indonesia Time)
	Source: startUpdateErrorHandler
	Error: {"name":"SequelizeDatabaseError","parent":{"code":"ER_TRUNCATED_WRONG_VALUE","errno":1292,"sqlState":"22007","sqlMessage":"Truncated incorrect DOUBLE value: ':product_id'","sql":"UPDATE `Products` SET `price`=?,`description`=?,`weight`=?,`unit`=?,`category_id`=? WHERE `id` = ?","parameters":[8000,"Lemon import florida",150,"1 pcs",1,":product_id"]},"original":{"code":"ER_TRUNCATED_WRONG_VALUE","errno":1292,"sqlState":"22007","sqlMessage":"Truncated incorrect DOUBLE value: ':product_id'","sql":"UPDATE `Products` SET `price`=?,`description`=?,`weight`=?,`unit`=?,`category_id`=? WHERE `id` = ?","parameters":[8000,"Lemon import florida",150,"1 pcs",1,":product_id"]},"sql":"UPDATE `Products` SET `price`=?,`description`=?,`weight`=?,`unit`=?,`category_id`=? WHERE `id` = ?","parameters":[8000,"Lemon import florida",150,"1 pcs",1,":product_id"]}
	