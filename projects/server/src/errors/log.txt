
	===
	Time: Thu Jul 13 2023 21:20:52 GMT+0700 (Waktu Indonesia Barat)
	Source: startCreateErrorHandler
	Error: {"name":"SequelizeUniqueConstraintError","errors":[{"message":"PRIMARY must be unique","type":"unique violation","path":"PRIMARY","value":"1-230","origin":"DB","instance":{"user_id":1,"inventory_id":"230","quantity":2},"validatorKey":"not_unique","validatorName":null,"validatorArgs":[]}],"parent":{"code":"ER_DUP_ENTRY","errno":1062,"sqlState":"23000","sqlMessage":"Duplicate entry '1-230' for key 'carts.PRIMARY'","sql":"INSERT INTO `Carts` (`user_id`,`inventory_id`,`quantity`) VALUES (?,?,?);","parameters":[1,"230",2]},"original":{"code":"ER_DUP_ENTRY","errno":1062,"sqlState":"23000","sqlMessage":"Duplicate entry '1-230' for key 'carts.PRIMARY'","sql":"INSERT INTO `Carts` (`user_id`,`inventory_id`,`quantity`) VALUES (?,?,?);","parameters":[1,"230",2]},"fields":{"PRIMARY":"1-230"},"sql":"INSERT INTO `Carts` (`user_id`,`inventory_id`,`quantity`) VALUES (?,?,?);"}
	
	===
	Time: Thu Jul 13 2023 21:22:29 GMT+0700 (Waktu Indonesia Barat)
	Source: startCreateErrorHandler
	Error: {"name":"SequelizeUniqueConstraintError","errors":[{"message":"PRIMARY must be unique","type":"unique violation","path":"PRIMARY","value":"1-171","origin":"DB","instance":{"user_id":1,"inventory_id":171,"quantity":1},"validatorKey":"not_unique","validatorName":null,"validatorArgs":[]}],"parent":{"code":"ER_DUP_ENTRY","errno":1062,"sqlState":"23000","sqlMessage":"Duplicate entry '1-171' for key 'carts.PRIMARY'","sql":"INSERT INTO `Carts` (`user_id`,`inventory_id`,`quantity`) VALUES (?,?,?);","parameters":[1,171,1]},"original":{"code":"ER_DUP_ENTRY","errno":1062,"sqlState":"23000","sqlMessage":"Duplicate entry '1-171' for key 'carts.PRIMARY'","sql":"INSERT INTO `Carts` (`user_id`,`inventory_id`,`quantity`) VALUES (?,?,?);","parameters":[1,171,1]},"fields":{"PRIMARY":"1-171"},"sql":"INSERT INTO `Carts` (`user_id`,`inventory_id`,`quantity`) VALUES (?,?,?);"}
	
	===
	Time: Thu Jul 13 2023 21:22:33 GMT+0700 (Waktu Indonesia Barat)
	Source: startCreateErrorHandler
	Error: {"name":"SequelizeUniqueConstraintError","errors":[{"message":"PRIMARY must be unique","type":"unique violation","path":"PRIMARY","value":"1-171","origin":"DB","instance":{"user_id":1,"inventory_id":171,"quantity":1},"validatorKey":"not_unique","validatorName":null,"validatorArgs":[]}],"parent":{"code":"ER_DUP_ENTRY","errno":1062,"sqlState":"23000","sqlMessage":"Duplicate entry '1-171' for key 'carts.PRIMARY'","sql":"INSERT INTO `Carts` (`user_id`,`inventory_id`,`quantity`) VALUES (?,?,?);","parameters":[1,171,1]},"original":{"code":"ER_DUP_ENTRY","errno":1062,"sqlState":"23000","sqlMessage":"Duplicate entry '1-171' for key 'carts.PRIMARY'","sql":"INSERT INTO `Carts` (`user_id`,`inventory_id`,`quantity`) VALUES (?,?,?);","parameters":[1,171,1]},"fields":{"PRIMARY":"1-171"},"sql":"INSERT INTO `Carts` (`user_id`,`inventory_id`,`quantity`) VALUES (?,?,?);"}
	
	===
	Time: Thu Jul 13 2023 21:23:01 GMT+0700 (Waktu Indonesia Barat)
	Source: startCreateErrorHandler
	Error: {"name":"SequelizeUniqueConstraintError","errors":[{"message":"PRIMARY must be unique","type":"unique violation","path":"PRIMARY","value":"1-173","origin":"DB","instance":{"user_id":1,"inventory_id":"173","quantity":1},"validatorKey":"not_unique","validatorName":null,"validatorArgs":[]}],"parent":{"code":"ER_DUP_ENTRY","errno":1062,"sqlState":"23000","sqlMessage":"Duplicate entry '1-173' for key 'carts.PRIMARY'","sql":"INSERT INTO `Carts` (`user_id`,`inventory_id`,`quantity`) VALUES (?,?,?);","parameters":[1,"173",1]},"original":{"code":"ER_DUP_ENTRY","errno":1062,"sqlState":"23000","sqlMessage":"Duplicate entry '1-173' for key 'carts.PRIMARY'","sql":"INSERT INTO `Carts` (`user_id`,`inventory_id`,`quantity`) VALUES (?,?,?);","parameters":[1,"173",1]},"fields":{"PRIMARY":"1-173"},"sql":"INSERT INTO `Carts` (`user_id`,`inventory_id`,`quantity`) VALUES (?,?,?);"}
	
	===
	Time: Tue Jul 18 2023 09:01:18 GMT+0700 (Western Indonesia Time)
	Source: startCreateErrorHandler
	Error: {"name":"SequelizeUniqueConstraintError","errors":[{"message":"PRIMARY must be unique","type":"unique violation","path":"PRIMARY","value":"1-9","origin":"DB","instance":{"user_id":1,"inventory_id":"9","quantity":2},"validatorKey":"not_unique","validatorName":null,"validatorArgs":[]}],"parent":{"code":"ER_DUP_ENTRY","errno":1062,"sqlState":"23000","sqlMessage":"Duplicate entry '1-9' for key 'carts.PRIMARY'","sql":"INSERT INTO `Carts` (`user_id`,`inventory_id`,`quantity`) VALUES (?,?,?);","parameters":[1,"9",2]},"original":{"code":"ER_DUP_ENTRY","errno":1062,"sqlState":"23000","sqlMessage":"Duplicate entry '1-9' for key 'carts.PRIMARY'","sql":"INSERT INTO `Carts` (`user_id`,`inventory_id`,`quantity`) VALUES (?,?,?);","parameters":[1,"9",2]},"fields":{"PRIMARY":"1-9"},"sql":"INSERT INTO `Carts` (`user_id`,`inventory_id`,`quantity`) VALUES (?,?,?);"}
	
	===
	Time: Tue Jul 18 2023 09:11:32 GMT+0700 (Western Indonesia Time)
	Source: startDeleteteHandler
	Error: {"name":"SequelizeForeignKeyConstraintError","parent":{"code":"ER_ROW_IS_REFERENCED_2","errno":1451,"sqlState":"23000","sqlMessage":"Cannot delete or update a parent row: a foreign key constraint fails (`ogwa`.`products`, CONSTRAINT `FK_Products-Categories` FOREIGN KEY (`category_id`) REFERENCES `categories` (`id`) ON DELETE RESTRICT ON UPDATE CASCADE)","sql":"DELETE FROM `Categories` WHERE `id` = 25"},"original":{"code":"ER_ROW_IS_REFERENCED_2","errno":1451,"sqlState":"23000","sqlMessage":"Cannot delete or update a parent row: a foreign key constraint fails (`ogwa`.`products`, CONSTRAINT `FK_Products-Categories` FOREIGN KEY (`category_id`) REFERENCES `categories` (`id`) ON DELETE RESTRICT ON UPDATE CASCADE)","sql":"DELETE FROM `Categories` WHERE `id` = 25"},"sql":"DELETE FROM `Categories` WHERE `id` = 25","parameters":{},"table":"categories","fields":["category_id"],"index":"FK_Products-Categories","reltype":"parent"}
	
	===
	Time: Tue Jul 18 2023 14:07:32 GMT+0700 (Western Indonesia Time)
	Source: startGetUserProfileErrorHandler
	Error: {}
	
	===
	Time: Tue Jul 18 2023 14:08:37 GMT+0700 (Western Indonesia Time)
	Source: startGetUserProfileErrorHandler
	Error: {}
	
	===
	Time: Tue Jul 18 2023 14:09:05 GMT+0700 (Western Indonesia Time)
	Source: startUserAuthenticationErrorHandler
	Error: {}
	
	===
	Time: Tue Jul 18 2023 14:09:11 GMT+0700 (Western Indonesia Time)
	Source: startUserAuthenticationErrorHandler
	Error: {}
	
	===
	Time: Tue Jul 18 2023 14:33:54 GMT+0700 (Western Indonesia Time)
	Source: startVerificationErrorHandler
	Error: "EMAIL_NOT_FOUND"
	
	===
	Time: Tue Jul 18 2023 14:36:11 GMT+0700 (Western Indonesia Time)
	Source: startFindErrorHandler
	Error: {"name":"SequelizeDatabaseError","parent":{"code":"ER_NO_SUCH_TABLE","errno":1146,"sqlState":"42S02","sqlMessage":"Table 'ogwa.products' doesn't exist","sql":"SELECT `Products`.`id`, `Products`.`image`, `Products`.`name`, `Products`.`price`, `Products`.`description`, `Products`.`weight`, `Products`.`unit`, `Products`.`category_id`, `Products`.`active`, `Inventories`.`id` AS `Inventories.id`, `Inventories`.`stock` AS `Inventories.stock`, `Inventories->Branch`.`id` AS `Inventories.Branch.id`, `Inventories->Branch`.`name` AS `Inventories.Branch.name`, `Inventories->promo`.`id` AS `Inventories.promo.id`, `Inventories->promo`.`inventory_id` AS `Inventories.promo.inventory_id`, `Inventories->promo`.`value` AS `Inventories.promo.value`, `Inventories->promo`.`start_at` AS `Inventories.promo.start_at`, `Inventories->promo`.`expired_at` AS `Inventories.promo.expired_at`, `Inventories->promo`.`promotion_id` AS `Inventories.promo.promotion_id`, `Inventories->promo`.`isActive` AS `Inventories.promo.isActive`, `Inventories->promo->Promotion`.`id` AS `Inventories.promo.Promotion.id`, `Inventories->promo->Promotion`.`name` AS `Inventories.promo.Promotion.name` FROM `Products` AS `Products` INNER JOIN `Inventories` AS `Inventories` ON `Products`.`id` = `Inventories`.`product_id` AND `Inventories`.`branch_id` = '1' LEFT OUTER JOIN `Branches` AS `Inventories->Branch` ON `Inventories`.`branch_id` = `Inventories->Branch`.`id` LEFT OUTER JOIN `Inventory_promotions` AS `Inventories->promo` ON `Inventories`.`id` = `Inventories->promo`.`inventory_id` LEFT OUTER JOIN `Promotions` AS `Inventories->promo->Promotion` ON `Inventories->promo`.`promotion_id` = `Inventories->promo->Promotion`.`id` WHERE `Products`.`active` = true;"},"original":{"code":"ER_NO_SUCH_TABLE","errno":1146,"sqlState":"42S02","sqlMessage":"Table 'ogwa.products' doesn't exist","sql":"SELECT `Products`.`id`, `Products`.`image`, `Products`.`name`, `Products`.`price`, `Products`.`description`, `Products`.`weight`, `Products`.`unit`, `Products`.`category_id`, `Products`.`active`, `Inventories`.`id` AS `Inventories.id`, `Inventories`.`stock` AS `Inventories.stock`, `Inventories->Branch`.`id` AS `Inventories.Branch.id`, `Inventories->Branch`.`name` AS `Inventories.Branch.name`, `Inventories->promo`.`id` AS `Inventories.promo.id`, `Inventories->promo`.`inventory_id` AS `Inventories.promo.inventory_id`, `Inventories->promo`.`value` AS `Inventories.promo.value`, `Inventories->promo`.`start_at` AS `Inventories.promo.start_at`, `Inventories->promo`.`expired_at` AS `Inventories.promo.expired_at`, `Inventories->promo`.`promotion_id` AS `Inventories.promo.promotion_id`, `Inventories->promo`.`isActive` AS `Inventories.promo.isActive`, `Inventories->promo->Promotion`.`id` AS `Inventories.promo.Promotion.id`, `Inventories->promo->Promotion`.`name` AS `Inventories.promo.Promotion.name` FROM `Products` AS `Products` INNER JOIN `Inventories` AS `Inventories` ON `Products`.`id` = `Inventories`.`product_id` AND `Inventories`.`branch_id` = '1' LEFT OUTER JOIN `Branches` AS `Inventories->Branch` ON `Inventories`.`branch_id` = `Inventories->Branch`.`id` LEFT OUTER JOIN `Inventory_promotions` AS `Inventories->promo` ON `Inventories`.`id` = `Inventories->promo`.`inventory_id` LEFT OUTER JOIN `Promotions` AS `Inventories->promo->Promotion` ON `Inventories->promo`.`promotion_id` = `Inventories->promo->Promotion`.`id` WHERE `Products`.`active` = true;"},"sql":"SELECT `Products`.`id`, `Products`.`image`, `Products`.`name`, `Products`.`price`, `Products`.`description`, `Products`.`weight`, `Products`.`unit`, `Products`.`category_id`, `Products`.`active`, `Inventories`.`id` AS `Inventories.id`, `Inventories`.`stock` AS `Inventories.stock`, `Inventories->Branch`.`id` AS `Inventories.Branch.id`, `Inventories->Branch`.`name` AS `Inventories.Branch.name`, `Inventories->promo`.`id` AS `Inventories.promo.id`, `Inventories->promo`.`inventory_id` AS `Inventories.promo.inventory_id`, `Inventories->promo`.`value` AS `Inventories.promo.value`, `Inventories->promo`.`start_at` AS `Inventories.promo.start_at`, `Inventories->promo`.`expired_at` AS `Inventories.promo.expired_at`, `Inventories->promo`.`promotion_id` AS `Inventories.promo.promotion_id`, `Inventories->promo`.`isActive` AS `Inventories.promo.isActive`, `Inventories->promo->Promotion`.`id` AS `Inventories.promo.Promotion.id`, `Inventories->promo->Promotion`.`name` AS `Inventories.promo.Promotion.name` FROM `Products` AS `Products` INNER JOIN `Inventories` AS `Inventories` ON `Products`.`id` = `Inventories`.`product_id` AND `Inventories`.`branch_id` = '1' LEFT OUTER JOIN `Branches` AS `Inventories->Branch` ON `Inventories`.`branch_id` = `Inventories->Branch`.`id` LEFT OUTER JOIN `Inventory_promotions` AS `Inventories->promo` ON `Inventories`.`id` = `Inventories->promo`.`inventory_id` LEFT OUTER JOIN `Promotions` AS `Inventories->promo->Promotion` ON `Inventories->promo`.`promotion_id` = `Inventories->promo->Promotion`.`id` WHERE `Products`.`active` = true;","parameters":{}}
	
	===
	Time: Tue Jul 18 2023 14:36:11 GMT+0700 (Western Indonesia Time)
	Source: startFindErrorHandler
	Error: {"name":"SequelizeDatabaseError","parent":{"code":"ER_NO_SUCH_TABLE","errno":1146,"sqlState":"42S02","sqlMessage":"Table 'ogwa.branches' doesn't exist","sql":"SELECT `id`, `admin_id`, `city_id`, `name`, `latitude`, `longitude` FROM `Branches` AS `Branches`;"},"original":{"code":"ER_NO_SUCH_TABLE","errno":1146,"sqlState":"42S02","sqlMessage":"Table 'ogwa.branches' doesn't exist","sql":"SELECT `id`, `admin_id`, `city_id`, `name`, `latitude`, `longitude` FROM `Branches` AS `Branches`;"},"sql":"SELECT `id`, `admin_id`, `city_id`, `name`, `latitude`, `longitude` FROM `Branches` AS `Branches`;","parameters":{}}
	
	===
	Time: Tue Jul 18 2023 14:36:11 GMT+0700 (Western Indonesia Time)
	Source: startFindErrorHandler
	Error: {"name":"SequelizeDatabaseError","parent":{"code":"ER_NO_SUCH_TABLE","errno":1146,"sqlState":"42S02","sqlMessage":"Table 'ogwa.products' doesn't exist","sql":"SELECT count(`Products`.`id`) AS `count` FROM `Products` AS `Products` INNER JOIN `Inventories` AS `Inventories` ON `Products`.`id` = `Inventories`.`product_id` AND `Inventories`.`branch_id` = '1' LEFT OUTER JOIN `Branches` AS `Inventories->Branch` ON `Inventories`.`branch_id` = `Inventories->Branch`.`id` LEFT OUTER JOIN `Inventory_promotions` AS `Inventories->promo` ON `Inventories`.`id` = `Inventories->promo`.`inventory_id` LEFT OUTER JOIN `Promotions` AS `Inventories->promo->Promotion` ON `Inventories->promo`.`promotion_id` = `Inventories->promo->Promotion`.`id` WHERE `Products`.`active` = true;"},"original":{"code":"ER_NO_SUCH_TABLE","errno":1146,"sqlState":"42S02","sqlMessage":"Table 'ogwa.products' doesn't exist","sql":"SELECT count(`Products`.`id`) AS `count` FROM `Products` AS `Products` INNER JOIN `Inventories` AS `Inventories` ON `Products`.`id` = `Inventories`.`product_id` AND `Inventories`.`branch_id` = '1' LEFT OUTER JOIN `Branches` AS `Inventories->Branch` ON `Inventories`.`branch_id` = `Inventories->Branch`.`id` LEFT OUTER JOIN `Inventory_promotions` AS `Inventories->promo` ON `Inventories`.`id` = `Inventories->promo`.`inventory_id` LEFT OUTER JOIN `Promotions` AS `Inventories->promo->Promotion` ON `Inventories->promo`.`promotion_id` = `Inventories->promo->Promotion`.`id` WHERE `Products`.`active` = true;"},"sql":"SELECT count(`Products`.`id`) AS `count` FROM `Products` AS `Products` INNER JOIN `Inventories` AS `Inventories` ON `Products`.`id` = `Inventories`.`product_id` AND `Inventories`.`branch_id` = '1' LEFT OUTER JOIN `Branches` AS `Inventories->Branch` ON `Inventories`.`branch_id` = `Inventories->Branch`.`id` LEFT OUTER JOIN `Inventory_promotions` AS `Inventories->promo` ON `Inventories`.`id` = `Inventories->promo`.`inventory_id` LEFT OUTER JOIN `Promotions` AS `Inventories->promo->Promotion` ON `Inventories->promo`.`promotion_id` = `Inventories->promo->Promotion`.`id` WHERE `Products`.`active` = true;","parameters":{}}
	