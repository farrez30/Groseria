
	===
	Time: Sun Jun 25 2023 16:47:18 GMT+0700 (Western Indonesia Time)
	Source: startFindErrorHandler
	Error: {"name":"SequelizeDatabaseError","parent":{"code":"ER_NO_SUCH_TABLE","errno":1146,"sqlState":"42S02","sqlMessage":"Table 'ogwa.proofs' doesn't exist","sql":"SELECT `Transactions`.*, `User`.`id` AS `User.id`, `User`.`email` AS `User.email`, `User`.`phone` AS `User.phone`, `User`.`password` AS `User.password`, `User`.`username` AS `User.username`, `User`.`verified` AS `User.verified`, `User`.`referral_code` AS `User.referral_code`, `User`.`referrer` AS `User.referrer`, `User`.`created_at` AS `User.created_at`, `User`.`updated_at` AS `User.updated_at`, `Status`.`id` AS `Status.id`, `Status`.`name` AS `Status.name`, `Branch`.`id` AS `Branch.id`, `Branch`.`admin_id` AS `Branch.admin_id`, `Branch`.`city_id` AS `Branch.city_id`, `Branch`.`name` AS `Branch.name`, `Branch`.`latitude` AS `Branch.latitude`, `Branch`.`longitude` AS `Branch.longitude`, `Proof`.`transaction_id` AS `Proof.transaction_id`, `Proof`.`image` AS `Proof.image`, `Transaction_details`.`id` AS `Transaction_details.id`, `Transaction_details`.`transaction_id` AS `Transaction_details.transaction_id`, `Transaction_details`.`inventory_id` AS `Transaction_details.inventory_id`, `Transaction_details`.`inventory_promotion_id` AS `Transaction_details.inventory_promotion_id`, `Transaction_details`.`name` AS `Transaction_details.name`, `Transaction_details`.`quantity` AS `Transaction_details.quantity`, `Transaction_details`.`price` AS `Transaction_details.price`, `Transaction_details`.`branch_discount` AS `Transaction_details.branch_discount` FROM (SELECT `Transactions`.`id`, `Transactions`.`user_id`, `Transactions`.`branch_id`, `Transactions`.`voucher_id`, `Transactions`.`amount`, `Transactions`.`voucher_discount`, `Transactions`.`status_id`, `Transactions`.`address`, `Transactions`.`created_at`, `Transactions`.`updated_at` FROM `Transactions` AS `Transactions` WHERE (`Transactions`.`created_at` >= '1970-12-31 17:00:00' AND `Transactions`.`created_at` <= '2023-06-25 09:47:18') ORDER BY `Transactions`.`id` DESC LIMIT 0, 5) AS `Transactions` LEFT OUTER JOIN `Users` AS `User` ON `Transactions`.`user_id` = `User`.`id` LEFT OUTER JOIN `Statuses` AS `Status` ON `Transactions`.`status_id` = `Status`.`id` LEFT OUTER JOIN `Branches` AS `Branch` ON `Transactions`.`branch_id` = `Branch`.`id` LEFT OUTER JOIN `Proofs` AS `Proof` ON `Transactions`.`id` = `Proof`.`transaction_id` LEFT OUTER JOIN `Transaction_details` AS `Transaction_details` ON `Transactions`.`id` = `Transaction_details`.`transaction_id` ORDER BY `Transactions`.`id` DESC;"},"original":{"code":"ER_NO_SUCH_TABLE","errno":1146,"sqlState":"42S02","sqlMessage":"Table 'ogwa.proofs' doesn't exist","sql":"SELECT `Transactions`.*, `User`.`id` AS `User.id`, `User`.`email` AS `User.email`, `User`.`phone` AS `User.phone`, `User`.`password` AS `User.password`, `User`.`username` AS `User.username`, `User`.`verified` AS `User.verified`, `User`.`referral_code` AS `User.referral_code`, `User`.`referrer` AS `User.referrer`, `User`.`created_at` AS `User.created_at`, `User`.`updated_at` AS `User.updated_at`, `Status`.`id` AS `Status.id`, `Status`.`name` AS `Status.name`, `Branch`.`id` AS `Branch.id`, `Branch`.`admin_id` AS `Branch.admin_id`, `Branch`.`city_id` AS `Branch.city_id`, `Branch`.`name` AS `Branch.name`, `Branch`.`latitude` AS `Branch.latitude`, `Branch`.`longitude` AS `Branch.longitude`, `Proof`.`transaction_id` AS `Proof.transaction_id`, `Proof`.`image` AS `Proof.image`, `Transaction_details`.`id` AS `Transaction_details.id`, `Transaction_details`.`transaction_id` AS `Transaction_details.transaction_id`, `Transaction_details`.`inventory_id` AS `Transaction_details.inventory_id`, `Transaction_details`.`inventory_promotion_id` AS `Transaction_details.inventory_promotion_id`, `Transaction_details`.`name` AS `Transaction_details.name`, `Transaction_details`.`quantity` AS `Transaction_details.quantity`, `Transaction_details`.`price` AS `Transaction_details.price`, `Transaction_details`.`branch_discount` AS `Transaction_details.branch_discount` FROM (SELECT `Transactions`.`id`, `Transactions`.`user_id`, `Transactions`.`branch_id`, `Transactions`.`voucher_id`, `Transactions`.`amount`, `Transactions`.`voucher_discount`, `Transactions`.`status_id`, `Transactions`.`address`, `Transactions`.`created_at`, `Transactions`.`updated_at` FROM `Transactions` AS `Transactions` WHERE (`Transactions`.`created_at` >= '1970-12-31 17:00:00' AND `Transactions`.`created_at` <= '2023-06-25 09:47:18') ORDER BY `Transactions`.`id` DESC LIMIT 0, 5) AS `Transactions` LEFT OUTER JOIN `Users` AS `User` ON `Transactions`.`user_id` = `User`.`id` LEFT OUTER JOIN `Statuses` AS `Status` ON `Transactions`.`status_id` = `Status`.`id` LEFT OUTER JOIN `Branches` AS `Branch` ON `Transactions`.`branch_id` = `Branch`.`id` LEFT OUTER JOIN `Proofs` AS `Proof` ON `Transactions`.`id` = `Proof`.`transaction_id` LEFT OUTER JOIN `Transaction_details` AS `Transaction_details` ON `Transactions`.`id` = `Transaction_details`.`transaction_id` ORDER BY `Transactions`.`id` DESC;"},"sql":"SELECT `Transactions`.*, `User`.`id` AS `User.id`, `User`.`email` AS `User.email`, `User`.`phone` AS `User.phone`, `User`.`password` AS `User.password`, `User`.`username` AS `User.username`, `User`.`verified` AS `User.verified`, `User`.`referral_code` AS `User.referral_code`, `User`.`referrer` AS `User.referrer`, `User`.`created_at` AS `User.created_at`, `User`.`updated_at` AS `User.updated_at`, `Status`.`id` AS `Status.id`, `Status`.`name` AS `Status.name`, `Branch`.`id` AS `Branch.id`, `Branch`.`admin_id` AS `Branch.admin_id`, `Branch`.`city_id` AS `Branch.city_id`, `Branch`.`name` AS `Branch.name`, `Branch`.`latitude` AS `Branch.latitude`, `Branch`.`longitude` AS `Branch.longitude`, `Proof`.`transaction_id` AS `Proof.transaction_id`, `Proof`.`image` AS `Proof.image`, `Transaction_details`.`id` AS `Transaction_details.id`, `Transaction_details`.`transaction_id` AS `Transaction_details.transaction_id`, `Transaction_details`.`inventory_id` AS `Transaction_details.inventory_id`, `Transaction_details`.`inventory_promotion_id` AS `Transaction_details.inventory_promotion_id`, `Transaction_details`.`name` AS `Transaction_details.name`, `Transaction_details`.`quantity` AS `Transaction_details.quantity`, `Transaction_details`.`price` AS `Transaction_details.price`, `Transaction_details`.`branch_discount` AS `Transaction_details.branch_discount` FROM (SELECT `Transactions`.`id`, `Transactions`.`user_id`, `Transactions`.`branch_id`, `Transactions`.`voucher_id`, `Transactions`.`amount`, `Transactions`.`voucher_discount`, `Transactions`.`status_id`, `Transactions`.`address`, `Transactions`.`created_at`, `Transactions`.`updated_at` FROM `Transactions` AS `Transactions` WHERE (`Transactions`.`created_at` >= '1970-12-31 17:00:00' AND `Transactions`.`created_at` <= '2023-06-25 09:47:18') ORDER BY `Transactions`.`id` DESC LIMIT 0, 5) AS `Transactions` LEFT OUTER JOIN `Users` AS `User` ON `Transactions`.`user_id` = `User`.`id` LEFT OUTER JOIN `Statuses` AS `Status` ON `Transactions`.`status_id` = `Status`.`id` LEFT OUTER JOIN `Branches` AS `Branch` ON `Transactions`.`branch_id` = `Branch`.`id` LEFT OUTER JOIN `Proofs` AS `Proof` ON `Transactions`.`id` = `Proof`.`transaction_id` LEFT OUTER JOIN `Transaction_details` AS `Transaction_details` ON `Transactions`.`id` = `Transaction_details`.`transaction_id` ORDER BY `Transactions`.`id` DESC;","parameters":{}}
	
	===
	Time: Sun Jun 25 2023 16:47:25 GMT+0700 (Western Indonesia Time)
	Source: startFindErrorHandler
	Error: {"name":"SequelizeDatabaseError","parent":{"code":"ER_NO_SUCH_TABLE","errno":1146,"sqlState":"42S02","sqlMessage":"Table 'ogwa.proofs' doesn't exist","sql":"SELECT count(DISTINCT(`Transactions`.`id`)) AS `count` FROM `Transactions` AS `Transactions` LEFT OUTER JOIN `Users` AS `User` ON `Transactions`.`user_id` = `User`.`id` LEFT OUTER JOIN `Statuses` AS `Status` ON `Transactions`.`status_id` = `Status`.`id` LEFT OUTER JOIN `Branches` AS `Branch` ON `Transactions`.`branch_id` = `Branch`.`id` LEFT OUTER JOIN `Proofs` AS `Proof` ON `Transactions`.`id` = `Proof`.`transaction_id` LEFT OUTER JOIN `Transaction_details` AS `Transaction_details` ON `Transactions`.`id` = `Transaction_details`.`transaction_id` WHERE (`Transactions`.`created_at` >= '1970-12-31 17:00:00' AND `Transactions`.`created_at` <= '2023-06-25 09:47:25');"},"original":{"code":"ER_NO_SUCH_TABLE","errno":1146,"sqlState":"42S02","sqlMessage":"Table 'ogwa.proofs' doesn't exist","sql":"SELECT count(DISTINCT(`Transactions`.`id`)) AS `count` FROM `Transactions` AS `Transactions` LEFT OUTER JOIN `Users` AS `User` ON `Transactions`.`user_id` = `User`.`id` LEFT OUTER JOIN `Statuses` AS `Status` ON `Transactions`.`status_id` = `Status`.`id` LEFT OUTER JOIN `Branches` AS `Branch` ON `Transactions`.`branch_id` = `Branch`.`id` LEFT OUTER JOIN `Proofs` AS `Proof` ON `Transactions`.`id` = `Proof`.`transaction_id` LEFT OUTER JOIN `Transaction_details` AS `Transaction_details` ON `Transactions`.`id` = `Transaction_details`.`transaction_id` WHERE (`Transactions`.`created_at` >= '1970-12-31 17:00:00' AND `Transactions`.`created_at` <= '2023-06-25 09:47:25');"},"sql":"SELECT count(DISTINCT(`Transactions`.`id`)) AS `count` FROM `Transactions` AS `Transactions` LEFT OUTER JOIN `Users` AS `User` ON `Transactions`.`user_id` = `User`.`id` LEFT OUTER JOIN `Statuses` AS `Status` ON `Transactions`.`status_id` = `Status`.`id` LEFT OUTER JOIN `Branches` AS `Branch` ON `Transactions`.`branch_id` = `Branch`.`id` LEFT OUTER JOIN `Proofs` AS `Proof` ON `Transactions`.`id` = `Proof`.`transaction_id` LEFT OUTER JOIN `Transaction_details` AS `Transaction_details` ON `Transactions`.`id` = `Transaction_details`.`transaction_id` WHERE (`Transactions`.`created_at` >= '1970-12-31 17:00:00' AND `Transactions`.`created_at` <= '2023-06-25 09:47:25');","parameters":{}}
	
	===
	Time: Sun Jun 25 2023 16:50:04 GMT+0700 (Western Indonesia Time)
	Source: startFindErrorHandler
	Error: {"name":"SequelizeDatabaseError","parent":{"code":"ER_NO_SUCH_TABLE","errno":1146,"sqlState":"42S02","sqlMessage":"Table 'ogwa.proofs' doesn't exist","sql":"SELECT count(DISTINCT(`Transactions`.`id`)) AS `count` FROM `Transactions` AS `Transactions` LEFT OUTER JOIN `Users` AS `User` ON `Transactions`.`user_id` = `User`.`id` LEFT OUTER JOIN `Statuses` AS `Status` ON `Transactions`.`status_id` = `Status`.`id` LEFT OUTER JOIN `Branches` AS `Branch` ON `Transactions`.`branch_id` = `Branch`.`id` LEFT OUTER JOIN `Proofs` AS `Proof` ON `Transactions`.`id` = `Proof`.`transaction_id` LEFT OUTER JOIN `Transaction_details` AS `Transaction_details` ON `Transactions`.`id` = `Transaction_details`.`transaction_id` WHERE (`Transactions`.`created_at` >= '1970-12-31 17:00:00' AND `Transactions`.`created_at` <= '2023-06-25 09:50:04');"},"original":{"code":"ER_NO_SUCH_TABLE","errno":1146,"sqlState":"42S02","sqlMessage":"Table 'ogwa.proofs' doesn't exist","sql":"SELECT count(DISTINCT(`Transactions`.`id`)) AS `count` FROM `Transactions` AS `Transactions` LEFT OUTER JOIN `Users` AS `User` ON `Transactions`.`user_id` = `User`.`id` LEFT OUTER JOIN `Statuses` AS `Status` ON `Transactions`.`status_id` = `Status`.`id` LEFT OUTER JOIN `Branches` AS `Branch` ON `Transactions`.`branch_id` = `Branch`.`id` LEFT OUTER JOIN `Proofs` AS `Proof` ON `Transactions`.`id` = `Proof`.`transaction_id` LEFT OUTER JOIN `Transaction_details` AS `Transaction_details` ON `Transactions`.`id` = `Transaction_details`.`transaction_id` WHERE (`Transactions`.`created_at` >= '1970-12-31 17:00:00' AND `Transactions`.`created_at` <= '2023-06-25 09:50:04');"},"sql":"SELECT count(DISTINCT(`Transactions`.`id`)) AS `count` FROM `Transactions` AS `Transactions` LEFT OUTER JOIN `Users` AS `User` ON `Transactions`.`user_id` = `User`.`id` LEFT OUTER JOIN `Statuses` AS `Status` ON `Transactions`.`status_id` = `Status`.`id` LEFT OUTER JOIN `Branches` AS `Branch` ON `Transactions`.`branch_id` = `Branch`.`id` LEFT OUTER JOIN `Proofs` AS `Proof` ON `Transactions`.`id` = `Proof`.`transaction_id` LEFT OUTER JOIN `Transaction_details` AS `Transaction_details` ON `Transactions`.`id` = `Transaction_details`.`transaction_id` WHERE (`Transactions`.`created_at` >= '1970-12-31 17:00:00' AND `Transactions`.`created_at` <= '2023-06-25 09:50:04');","parameters":{}}
	
	===
	Time: Sun Jun 25 2023 16:50:16 GMT+0700 (Western Indonesia Time)
	Source: startFindErrorHandler
	Error: {"name":"SequelizeDatabaseError","parent":{"code":"ER_NO_SUCH_TABLE","errno":1146,"sqlState":"42S02","sqlMessage":"Table 'ogwa.proofs' doesn't exist","sql":"SELECT count(DISTINCT(`Transactions`.`id`)) AS `count` FROM `Transactions` AS `Transactions` LEFT OUTER JOIN `Users` AS `User` ON `Transactions`.`user_id` = `User`.`id` LEFT OUTER JOIN `Statuses` AS `Status` ON `Transactions`.`status_id` = `Status`.`id` LEFT OUTER JOIN `Branches` AS `Branch` ON `Transactions`.`branch_id` = `Branch`.`id` LEFT OUTER JOIN `Proofs` AS `Proof` ON `Transactions`.`id` = `Proof`.`transaction_id` LEFT OUTER JOIN `Transaction_details` AS `Transaction_details` ON `Transactions`.`id` = `Transaction_details`.`transaction_id` WHERE (`Transactions`.`created_at` >= '1970-12-31 17:00:00' AND `Transactions`.`created_at` <= '2023-06-25 09:50:16');"},"original":{"code":"ER_NO_SUCH_TABLE","errno":1146,"sqlState":"42S02","sqlMessage":"Table 'ogwa.proofs' doesn't exist","sql":"SELECT count(DISTINCT(`Transactions`.`id`)) AS `count` FROM `Transactions` AS `Transactions` LEFT OUTER JOIN `Users` AS `User` ON `Transactions`.`user_id` = `User`.`id` LEFT OUTER JOIN `Statuses` AS `Status` ON `Transactions`.`status_id` = `Status`.`id` LEFT OUTER JOIN `Branches` AS `Branch` ON `Transactions`.`branch_id` = `Branch`.`id` LEFT OUTER JOIN `Proofs` AS `Proof` ON `Transactions`.`id` = `Proof`.`transaction_id` LEFT OUTER JOIN `Transaction_details` AS `Transaction_details` ON `Transactions`.`id` = `Transaction_details`.`transaction_id` WHERE (`Transactions`.`created_at` >= '1970-12-31 17:00:00' AND `Transactions`.`created_at` <= '2023-06-25 09:50:16');"},"sql":"SELECT count(DISTINCT(`Transactions`.`id`)) AS `count` FROM `Transactions` AS `Transactions` LEFT OUTER JOIN `Users` AS `User` ON `Transactions`.`user_id` = `User`.`id` LEFT OUTER JOIN `Statuses` AS `Status` ON `Transactions`.`status_id` = `Status`.`id` LEFT OUTER JOIN `Branches` AS `Branch` ON `Transactions`.`branch_id` = `Branch`.`id` LEFT OUTER JOIN `Proofs` AS `Proof` ON `Transactions`.`id` = `Proof`.`transaction_id` LEFT OUTER JOIN `Transaction_details` AS `Transaction_details` ON `Transactions`.`id` = `Transaction_details`.`transaction_id` WHERE (`Transactions`.`created_at` >= '1970-12-31 17:00:00' AND `Transactions`.`created_at` <= '2023-06-25 09:50:16');","parameters":{}}
	
	===
	Time: Sun Jun 25 2023 16:50:57 GMT+0700 (Western Indonesia Time)
	Source: startFindErrorHandler
	Error: {"name":"SequelizeDatabaseError","parent":{"code":"ER_NO_SUCH_TABLE","errno":1146,"sqlState":"42S02","sqlMessage":"Table 'ogwa.proofs' doesn't exist","sql":"SELECT count(DISTINCT(`Transactions`.`id`)) AS `count` FROM `Transactions` AS `Transactions` LEFT OUTER JOIN `Users` AS `User` ON `Transactions`.`user_id` = `User`.`id` LEFT OUTER JOIN `Statuses` AS `Status` ON `Transactions`.`status_id` = `Status`.`id` LEFT OUTER JOIN `Branches` AS `Branch` ON `Transactions`.`branch_id` = `Branch`.`id` LEFT OUTER JOIN `Proofs` AS `Proof` ON `Transactions`.`id` = `Proof`.`transaction_id` LEFT OUTER JOIN `Transaction_details` AS `Transaction_details` ON `Transactions`.`id` = `Transaction_details`.`transaction_id` WHERE (`Transactions`.`created_at` >= '1970-12-31 17:00:00' AND `Transactions`.`created_at` <= '2023-06-25 09:50:57');"},"original":{"code":"ER_NO_SUCH_TABLE","errno":1146,"sqlState":"42S02","sqlMessage":"Table 'ogwa.proofs' doesn't exist","sql":"SELECT count(DISTINCT(`Transactions`.`id`)) AS `count` FROM `Transactions` AS `Transactions` LEFT OUTER JOIN `Users` AS `User` ON `Transactions`.`user_id` = `User`.`id` LEFT OUTER JOIN `Statuses` AS `Status` ON `Transactions`.`status_id` = `Status`.`id` LEFT OUTER JOIN `Branches` AS `Branch` ON `Transactions`.`branch_id` = `Branch`.`id` LEFT OUTER JOIN `Proofs` AS `Proof` ON `Transactions`.`id` = `Proof`.`transaction_id` LEFT OUTER JOIN `Transaction_details` AS `Transaction_details` ON `Transactions`.`id` = `Transaction_details`.`transaction_id` WHERE (`Transactions`.`created_at` >= '1970-12-31 17:00:00' AND `Transactions`.`created_at` <= '2023-06-25 09:50:57');"},"sql":"SELECT count(DISTINCT(`Transactions`.`id`)) AS `count` FROM `Transactions` AS `Transactions` LEFT OUTER JOIN `Users` AS `User` ON `Transactions`.`user_id` = `User`.`id` LEFT OUTER JOIN `Statuses` AS `Status` ON `Transactions`.`status_id` = `Status`.`id` LEFT OUTER JOIN `Branches` AS `Branch` ON `Transactions`.`branch_id` = `Branch`.`id` LEFT OUTER JOIN `Proofs` AS `Proof` ON `Transactions`.`id` = `Proof`.`transaction_id` LEFT OUTER JOIN `Transaction_details` AS `Transaction_details` ON `Transactions`.`id` = `Transaction_details`.`transaction_id` WHERE (`Transactions`.`created_at` >= '1970-12-31 17:00:00' AND `Transactions`.`created_at` <= '2023-06-25 09:50:57');","parameters":{}}
	
	===
	Time: Sun Jun 25 2023 16:58:50 GMT+0700 (Western Indonesia Time)
	Source: startFindErrorHandler
	Error: {"name":"SequelizeDatabaseError","parent":{"code":"ER_BAD_FIELD_ERROR","errno":1054,"sqlState":"42S22","sqlMessage":"Unknown column 'Categories.price' in 'order clause'","sql":"SELECT `id`, `name`, `image` FROM `Categories` AS `Categories` ORDER BY `Categories`.`price` ASC LIMIT 0, 5;"},"original":{"code":"ER_BAD_FIELD_ERROR","errno":1054,"sqlState":"42S22","sqlMessage":"Unknown column 'Categories.price' in 'order clause'","sql":"SELECT `id`, `name`, `image` FROM `Categories` AS `Categories` ORDER BY `Categories`.`price` ASC LIMIT 0, 5;"},"sql":"SELECT `id`, `name`, `image` FROM `Categories` AS `Categories` ORDER BY `Categories`.`price` ASC LIMIT 0, 5;","parameters":{}}
	
	===
	Time: Sun Jun 25 2023 16:58:54 GMT+0700 (Western Indonesia Time)
	Source: startFindErrorHandler
	Error: {"name":"SequelizeDatabaseError","parent":{"code":"ER_BAD_FIELD_ERROR","errno":1054,"sqlState":"42S22","sqlMessage":"Unknown column 'Categories.price' in 'order clause'","sql":"SELECT `id`, `name`, `image` FROM `Categories` AS `Categories` ORDER BY `Categories`.`price` ASC LIMIT 0, 5;"},"original":{"code":"ER_BAD_FIELD_ERROR","errno":1054,"sqlState":"42S22","sqlMessage":"Unknown column 'Categories.price' in 'order clause'","sql":"SELECT `id`, `name`, `image` FROM `Categories` AS `Categories` ORDER BY `Categories`.`price` ASC LIMIT 0, 5;"},"sql":"SELECT `id`, `name`, `image` FROM `Categories` AS `Categories` ORDER BY `Categories`.`price` ASC LIMIT 0, 5;","parameters":{}}
	
	===
	Time: Sun Jun 25 2023 17:49:36 GMT+0700 (Western Indonesia Time)
	Source: startFindErrorHandler
	Error: {}
	
	===
	Time: Sun Jun 25 2023 17:51:04 GMT+0700 (Western Indonesia Time)
	Source: startFindErrorHandler
	Error: {}
	
	===
	Time: Mon Jun 26 2023 10:36:41 GMT+0700 (Western Indonesia Time)
	Source: startDeleteteHandler
	Error: {"name":"SequelizeForeignKeyConstraintError","parent":{"code":"ER_ROW_IS_REFERENCED_2","errno":1451,"sqlState":"23000","sqlMessage":"Cannot delete or update a parent row: a foreign key constraint fails (`ogwa`.`products`, CONSTRAINT `FK_Products-Categories` FOREIGN KEY (`category_id`) REFERENCES `categories` (`id`) ON DELETE RESTRICT ON UPDATE CASCADE)","sql":"DELETE FROM `Categories` WHERE `id` = 1"},"original":{"code":"ER_ROW_IS_REFERENCED_2","errno":1451,"sqlState":"23000","sqlMessage":"Cannot delete or update a parent row: a foreign key constraint fails (`ogwa`.`products`, CONSTRAINT `FK_Products-Categories` FOREIGN KEY (`category_id`) REFERENCES `categories` (`id`) ON DELETE RESTRICT ON UPDATE CASCADE)","sql":"DELETE FROM `Categories` WHERE `id` = 1"},"sql":"DELETE FROM `Categories` WHERE `id` = 1","parameters":{},"table":"categories","fields":["category_id"],"index":"FK_Products-Categories","reltype":"parent"}
	
	===
	Time: Mon Jun 26 2023 10:38:50 GMT+0700 (Western Indonesia Time)
	Source: startDeleteteHandler
	Error: {"name":"SequelizeForeignKeyConstraintError","parent":{"code":"ER_ROW_IS_REFERENCED_2","errno":1451,"sqlState":"23000","sqlMessage":"Cannot delete or update a parent row: a foreign key constraint fails (`ogwa`.`products`, CONSTRAINT `FK_Products-Categories` FOREIGN KEY (`category_id`) REFERENCES `categories` (`id`) ON DELETE RESTRICT ON UPDATE CASCADE)","sql":"DELETE FROM `Categories` WHERE `id` = 1"},"original":{"code":"ER_ROW_IS_REFERENCED_2","errno":1451,"sqlState":"23000","sqlMessage":"Cannot delete or update a parent row: a foreign key constraint fails (`ogwa`.`products`, CONSTRAINT `FK_Products-Categories` FOREIGN KEY (`category_id`) REFERENCES `categories` (`id`) ON DELETE RESTRICT ON UPDATE CASCADE)","sql":"DELETE FROM `Categories` WHERE `id` = 1"},"sql":"DELETE FROM `Categories` WHERE `id` = 1","parameters":{},"table":"categories","fields":["category_id"],"index":"FK_Products-Categories","reltype":"parent"}
	
	===
	Time: Mon Jun 26 2023 10:39:18 GMT+0700 (Western Indonesia Time)
	Source: startDeleteteHandler
	Error: {"name":"SequelizeForeignKeyConstraintError","parent":{"code":"ER_ROW_IS_REFERENCED_2","errno":1451,"sqlState":"23000","sqlMessage":"Cannot delete or update a parent row: a foreign key constraint fails (`ogwa`.`products`, CONSTRAINT `FK_Products-Categories` FOREIGN KEY (`category_id`) REFERENCES `categories` (`id`) ON DELETE RESTRICT ON UPDATE CASCADE)","sql":"DELETE FROM `Categories` WHERE `id` = 1"},"original":{"code":"ER_ROW_IS_REFERENCED_2","errno":1451,"sqlState":"23000","sqlMessage":"Cannot delete or update a parent row: a foreign key constraint fails (`ogwa`.`products`, CONSTRAINT `FK_Products-Categories` FOREIGN KEY (`category_id`) REFERENCES `categories` (`id`) ON DELETE RESTRICT ON UPDATE CASCADE)","sql":"DELETE FROM `Categories` WHERE `id` = 1"},"sql":"DELETE FROM `Categories` WHERE `id` = 1","parameters":{},"table":"categories","fields":["category_id"],"index":"FK_Products-Categories","reltype":"parent"}
	
	===
	Time: Mon Jun 26 2023 10:52:24 GMT+0700 (Western Indonesia Time)
	Source: startDeleteteHandler
	Error: {"name":"SequelizeForeignKeyConstraintError","parent":{"code":"ER_ROW_IS_REFERENCED_2","errno":1451,"sqlState":"23000","sqlMessage":"Cannot delete or update a parent row: a foreign key constraint fails (`ogwa`.`products`, CONSTRAINT `FK_Products-Categories` FOREIGN KEY (`category_id`) REFERENCES `categories` (`id`) ON DELETE RESTRICT ON UPDATE CASCADE)","sql":"DELETE FROM `Categories` WHERE `id` = 1"},"original":{"code":"ER_ROW_IS_REFERENCED_2","errno":1451,"sqlState":"23000","sqlMessage":"Cannot delete or update a parent row: a foreign key constraint fails (`ogwa`.`products`, CONSTRAINT `FK_Products-Categories` FOREIGN KEY (`category_id`) REFERENCES `categories` (`id`) ON DELETE RESTRICT ON UPDATE CASCADE)","sql":"DELETE FROM `Categories` WHERE `id` = 1"},"sql":"DELETE FROM `Categories` WHERE `id` = 1","parameters":{},"table":"categories","fields":["category_id"],"index":"FK_Products-Categories","reltype":"parent"}
	
	===
	Time: Mon Jun 26 2023 10:52:27 GMT+0700 (Western Indonesia Time)
	Source: startDeleteteHandler
	Error: {"name":"SequelizeForeignKeyConstraintError","parent":{"code":"ER_ROW_IS_REFERENCED_2","errno":1451,"sqlState":"23000","sqlMessage":"Cannot delete or update a parent row: a foreign key constraint fails (`ogwa`.`products`, CONSTRAINT `FK_Products-Categories` FOREIGN KEY (`category_id`) REFERENCES `categories` (`id`) ON DELETE RESTRICT ON UPDATE CASCADE)","sql":"DELETE FROM `Categories` WHERE `id` = 1"},"original":{"code":"ER_ROW_IS_REFERENCED_2","errno":1451,"sqlState":"23000","sqlMessage":"Cannot delete or update a parent row: a foreign key constraint fails (`ogwa`.`products`, CONSTRAINT `FK_Products-Categories` FOREIGN KEY (`category_id`) REFERENCES `categories` (`id`) ON DELETE RESTRICT ON UPDATE CASCADE)","sql":"DELETE FROM `Categories` WHERE `id` = 1"},"sql":"DELETE FROM `Categories` WHERE `id` = 1","parameters":{},"table":"categories","fields":["category_id"],"index":"FK_Products-Categories","reltype":"parent"}
	
	===
	Time: Mon Jun 26 2023 20:37:10 GMT+0700 (Western Indonesia Time)
	Source: startFindErrorHandler
	Error: {"name":"SequelizeDatabaseError","parent":{"code":"ER_BAD_FIELD_ERROR","errno":1054,"sqlState":"42S22","sqlMessage":"Unknown column 'Products.1' in 'order clause'","sql":"SELECT `Products`.`id`, `Products`.`image`, `Products`.`name`, `Products`.`price`, `Products`.`description`, `Products`.`weight`, `Products`.`unit`, `Products`.`category_id`, `Products`.`active`, `Category`.`id` AS `Category.id`, `Category`.`name` AS `Category.name`, `Category`.`image` AS `Category.image` FROM `Products` AS `Products` LEFT OUTER JOIN `Categories` AS `Category` ON `Products`.`category_id` = `Category`.`id` ORDER BY `Products`.`1` DESC LIMIT 0, 8;"},"original":{"code":"ER_BAD_FIELD_ERROR","errno":1054,"sqlState":"42S22","sqlMessage":"Unknown column 'Products.1' in 'order clause'","sql":"SELECT `Products`.`id`, `Products`.`image`, `Products`.`name`, `Products`.`price`, `Products`.`description`, `Products`.`weight`, `Products`.`unit`, `Products`.`category_id`, `Products`.`active`, `Category`.`id` AS `Category.id`, `Category`.`name` AS `Category.name`, `Category`.`image` AS `Category.image` FROM `Products` AS `Products` LEFT OUTER JOIN `Categories` AS `Category` ON `Products`.`category_id` = `Category`.`id` ORDER BY `Products`.`1` DESC LIMIT 0, 8;"},"sql":"SELECT `Products`.`id`, `Products`.`image`, `Products`.`name`, `Products`.`price`, `Products`.`description`, `Products`.`weight`, `Products`.`unit`, `Products`.`category_id`, `Products`.`active`, `Category`.`id` AS `Category.id`, `Category`.`name` AS `Category.name`, `Category`.`image` AS `Category.image` FROM `Products` AS `Products` LEFT OUTER JOIN `Categories` AS `Category` ON `Products`.`category_id` = `Category`.`id` ORDER BY `Products`.`1` DESC LIMIT 0, 8;","parameters":{}}
	
	===
	Time: Tue Jun 27 2023 14:24:10 GMT+0700 (Western Indonesia Time)
	Source: startRegistrationErrorHandler
	Error: {"name":"SequelizeValidationError","errors":[{"message":"Users.phone cannot be null","type":"notNull Violation","path":"phone","value":null,"origin":"CORE","instance":{"verified":false,"referral_code":null,"referrer":null,"created_at":{"val":"CURRENT_TIMESTAMP"},"updated_at":{"val":"CURRENT_TIMESTAMP"},"id":null,"email":"danang@mail.com","password":""},"validatorKey":"is_null","validatorName":null,"validatorArgs":[]},{"message":"Users.username cannot be null","type":"notNull Violation","path":"username","value":null,"origin":"CORE","instance":{"verified":false,"referral_code":null,"referrer":null,"created_at":{"val":"CURRENT_TIMESTAMP"},"updated_at":{"val":"CURRENT_TIMESTAMP"},"id":null,"email":"danang@mail.com","password":""},"validatorKey":"is_null","validatorName":null,"validatorArgs":[]}]}
	
	===
	Time: Tue Jun 27 2023 14:24:51 GMT+0700 (Western Indonesia Time)
	Source: startRegistrationErrorHandler
	Error: {"name":"SequelizeValidationError","errors":[{"message":"Users.phone cannot be null","type":"notNull Violation","path":"phone","value":null,"origin":"CORE","instance":{"verified":false,"referral_code":null,"referrer":null,"created_at":{"val":"CURRENT_TIMESTAMP"},"updated_at":{"val":"CURRENT_TIMESTAMP"},"id":null,"email":"danang@mail.com"},"validatorKey":"is_null","validatorName":null,"validatorArgs":[]},{"message":"Users.password cannot be null","type":"notNull Violation","path":"password","value":null,"origin":"CORE","instance":{"verified":false,"referral_code":null,"referrer":null,"created_at":{"val":"CURRENT_TIMESTAMP"},"updated_at":{"val":"CURRENT_TIMESTAMP"},"id":null,"email":"danang@mail.com"},"validatorKey":"is_null","validatorName":null,"validatorArgs":[]},{"message":"Users.username cannot be null","type":"notNull Violation","path":"username","value":null,"origin":"CORE","instance":{"verified":false,"referral_code":null,"referrer":null,"created_at":{"val":"CURRENT_TIMESTAMP"},"updated_at":{"val":"CURRENT_TIMESTAMP"},"id":null,"email":"danang@mail.com"},"validatorKey":"is_null","validatorName":null,"validatorArgs":[]}]}
	
	===
	Time: Tue Jun 27 2023 14:47:44 GMT+0700 (Western Indonesia Time)
	Source: startRegistrationErrorHandler
	Error: {"name":"SequelizeValidationError","errors":[{"message":"Users.phone cannot be null","type":"notNull Violation","path":"phone","value":null,"origin":"CORE","instance":{"verified":false,"referral_code":null,"referrer":null,"created_at":{"val":"CURRENT_TIMESTAMP"},"updated_at":{"val":"CURRENT_TIMESTAMP"},"id":null,"email":"verified@mail.com"},"validatorKey":"is_null","validatorName":null,"validatorArgs":[]},{"message":"Users.password cannot be null","type":"notNull Violation","path":"password","value":null,"origin":"CORE","instance":{"verified":false,"referral_code":null,"referrer":null,"created_at":{"val":"CURRENT_TIMESTAMP"},"updated_at":{"val":"CURRENT_TIMESTAMP"},"id":null,"email":"verified@mail.com"},"validatorKey":"is_null","validatorName":null,"validatorArgs":[]},{"message":"Users.username cannot be null","type":"notNull Violation","path":"username","value":null,"origin":"CORE","instance":{"verified":false,"referral_code":null,"referrer":null,"created_at":{"val":"CURRENT_TIMESTAMP"},"updated_at":{"val":"CURRENT_TIMESTAMP"},"id":null,"email":"verified@mail.com"},"validatorKey":"is_null","validatorName":null,"validatorArgs":[]}]}
	
	===
	Time: Tue Jun 27 2023 14:48:32 GMT+0700 (Western Indonesia Time)
	Source: startRegistrationErrorHandler
	Error: {"name":"SequelizeValidationError","errors":[{"message":"Users.phone cannot be null","type":"notNull Violation","path":"phone","value":null,"origin":"CORE","instance":{"verified":false,"referral_code":null,"referrer":null,"created_at":{"val":"CURRENT_TIMESTAMP"},"updated_at":{"val":"CURRENT_TIMESTAMP"},"id":null,"email":"verified@mail.com"},"validatorKey":"is_null","validatorName":null,"validatorArgs":[]},{"message":"Users.password cannot be null","type":"notNull Violation","path":"password","value":null,"origin":"CORE","instance":{"verified":false,"referral_code":null,"referrer":null,"created_at":{"val":"CURRENT_TIMESTAMP"},"updated_at":{"val":"CURRENT_TIMESTAMP"},"id":null,"email":"verified@mail.com"},"validatorKey":"is_null","validatorName":null,"validatorArgs":[]},{"message":"Users.username cannot be null","type":"notNull Violation","path":"username","value":null,"origin":"CORE","instance":{"verified":false,"referral_code":null,"referrer":null,"created_at":{"val":"CURRENT_TIMESTAMP"},"updated_at":{"val":"CURRENT_TIMESTAMP"},"id":null,"email":"verified@mail.com"},"validatorKey":"is_null","validatorName":null,"validatorArgs":[]}]}
	
	===
	Time: Tue Jun 27 2023 14:49:08 GMT+0700 (Western Indonesia Time)
	Source: startRegistrationErrorHandler
	Error: {"name":"SequelizeValidationError","errors":[{"message":"Users.phone cannot be null","type":"notNull Violation","path":"phone","value":null,"origin":"CORE","instance":{"verified":false,"referral_code":null,"referrer":null,"created_at":{"val":"CURRENT_TIMESTAMP"},"updated_at":{"val":"CURRENT_TIMESTAMP"},"id":null,"email":"verified@mail.com"},"validatorKey":"is_null","validatorName":null,"validatorArgs":[]},{"message":"Users.password cannot be null","type":"notNull Violation","path":"password","value":null,"origin":"CORE","instance":{"verified":false,"referral_code":null,"referrer":null,"created_at":{"val":"CURRENT_TIMESTAMP"},"updated_at":{"val":"CURRENT_TIMESTAMP"},"id":null,"email":"verified@mail.com"},"validatorKey":"is_null","validatorName":null,"validatorArgs":[]},{"message":"Users.username cannot be null","type":"notNull Violation","path":"username","value":null,"origin":"CORE","instance":{"verified":false,"referral_code":null,"referrer":null,"created_at":{"val":"CURRENT_TIMESTAMP"},"updated_at":{"val":"CURRENT_TIMESTAMP"},"id":null,"email":"verified@mail.com"},"validatorKey":"is_null","validatorName":null,"validatorArgs":[]}]}
	
	===
	Time: Tue Jun 27 2023 14:49:24 GMT+0700 (Western Indonesia Time)
	Source: startRegistrationErrorHandler
	Error: {}
	
	===
	Time: Tue Jun 27 2023 14:49:32 GMT+0700 (Western Indonesia Time)
	Source: startRegistrationErrorHandler
	Error: {}
	
	===
	Time: Tue Jun 27 2023 14:49:48 GMT+0700 (Western Indonesia Time)
	Source: startRegistrationErrorHandler
	Error: {}
	
	===
	Time: Tue Jun 27 2023 14:50:23 GMT+0700 (Western Indonesia Time)
	Source: startRegistrationErrorHandler
	Error: {"name":"SequelizeValidationError","errors":[{"message":"Users.phone cannot be null","type":"notNull Violation","path":"phone","value":null,"origin":"CORE","instance":{"verified":false,"referral_code":null,"referrer":null,"created_at":{"val":"CURRENT_TIMESTAMP"},"updated_at":{"val":"CURRENT_TIMESTAMP"},"id":null,"email":"verified@mail.commm"},"validatorKey":"is_null","validatorName":null,"validatorArgs":[]},{"message":"Users.password cannot be null","type":"notNull Violation","path":"password","value":null,"origin":"CORE","instance":{"verified":false,"referral_code":null,"referrer":null,"created_at":{"val":"CURRENT_TIMESTAMP"},"updated_at":{"val":"CURRENT_TIMESTAMP"},"id":null,"email":"verified@mail.commm"},"validatorKey":"is_null","validatorName":null,"validatorArgs":[]},{"message":"Users.username cannot be null","type":"notNull Violation","path":"username","value":null,"origin":"CORE","instance":{"verified":false,"referral_code":null,"referrer":null,"created_at":{"val":"CURRENT_TIMESTAMP"},"updated_at":{"val":"CURRENT_TIMESTAMP"},"id":null,"email":"verified@mail.commm"},"validatorKey":"is_null","validatorName":null,"validatorArgs":[]}]}
	
	===
	Time: Tue Jun 27 2023 14:53:28 GMT+0700 (Western Indonesia Time)
	Source: startVerificationErrorHandler
	Error: "EMAIL_NOT_FOUND"
	
	===
	Time: Tue Jun 27 2023 14:53:35 GMT+0700 (Western Indonesia Time)
	Source: startVerificationErrorHandler
	Error: "EMAIL_NOT_FOUND"
	
	===
	Time: Tue Jun 27 2023 14:53:36 GMT+0700 (Western Indonesia Time)
	Source: startVerificationErrorHandler
	Error: "EMAIL_NOT_FOUND"
	
	===
	Time: Tue Jun 27 2023 14:53:38 GMT+0700 (Western Indonesia Time)
	Source: startVerificationErrorHandler
	Error: "EMAIL_NOT_FOUND"
	
	===
	Time: Tue Jun 27 2023 14:54:00 GMT+0700 (Western Indonesia Time)
	Source: startVerificationErrorHandler
	Error: "EMAIL_NOT_FOUND"
	
	===
	Time: Tue Jun 27 2023 14:55:10 GMT+0700 (Western Indonesia Time)
	Source: startVerificationErrorHandler
	Error: "EMAIL_NOT_FOUND"
	
	===
	Time: Tue Jun 27 2023 14:55:12 GMT+0700 (Western Indonesia Time)
	Source: startVerificationErrorHandler
	Error: "EMAIL_NOT_FOUND"
	
	===
	Time: Tue Jun 27 2023 14:55:32 GMT+0700 (Western Indonesia Time)
	Source: startVerificationErrorHandler
	Error: "EMAIL_NOT_FOUND"
	
	===
	Time: Tue Jun 27 2023 14:55:32 GMT+0700 (Western Indonesia Time)
	Source: startVerificationErrorHandler
	Error: "EMAIL_NOT_FOUND"
	
	===
	Time: Tue Jun 27 2023 14:55:40 GMT+0700 (Western Indonesia Time)
	Source: startVerificationErrorHandler
	Error: "EMAIL_NOT_FOUND"
	
	===
	Time: Tue Jun 27 2023 14:55:56 GMT+0700 (Western Indonesia Time)
	Source: startVerificationErrorHandler
	Error: {"name":"SequelizeValidationError","errors":[{"message":"Users.phone cannot be null","type":"notNull Violation","path":"phone","value":null,"origin":"CORE","instance":{"verified":false,"referral_code":null,"referrer":null,"created_at":{"val":"CURRENT_TIMESTAMP"},"updated_at":{"val":"CURRENT_TIMESTAMP"},"id":null,"email":"verified@mail.com"},"validatorKey":"is_null","validatorName":null,"validatorArgs":[]},{"message":"Users.password cannot be null","type":"notNull Violation","path":"password","value":null,"origin":"CORE","instance":{"verified":false,"referral_code":null,"referrer":null,"created_at":{"val":"CURRENT_TIMESTAMP"},"updated_at":{"val":"CURRENT_TIMESTAMP"},"id":null,"email":"verified@mail.com"},"validatorKey":"is_null","validatorName":null,"validatorArgs":[]},{"message":"Users.username cannot be null","type":"notNull Violation","path":"username","value":null,"origin":"CORE","instance":{"verified":false,"referral_code":null,"referrer":null,"created_at":{"val":"CURRENT_TIMESTAMP"},"updated_at":{"val":"CURRENT_TIMESTAMP"},"id":null,"email":"verified@mail.com"},"validatorKey":"is_null","validatorName":null,"validatorArgs":[]}]}
	
	===
	Time: Tue Jun 27 2023 14:56:01 GMT+0700 (Western Indonesia Time)
	Source: startVerificationErrorHandler
	Error: {"name":"SequelizeValidationError","errors":[{"message":"Users.phone cannot be null","type":"notNull Violation","path":"phone","value":null,"origin":"CORE","instance":{"verified":false,"referral_code":null,"referrer":null,"created_at":{"val":"CURRENT_TIMESTAMP"},"updated_at":{"val":"CURRENT_TIMESTAMP"},"id":null,"email":"verified@mail.com"},"validatorKey":"is_null","validatorName":null,"validatorArgs":[]},{"message":"Users.password cannot be null","type":"notNull Violation","path":"password","value":null,"origin":"CORE","instance":{"verified":false,"referral_code":null,"referrer":null,"created_at":{"val":"CURRENT_TIMESTAMP"},"updated_at":{"val":"CURRENT_TIMESTAMP"},"id":null,"email":"verified@mail.com"},"validatorKey":"is_null","validatorName":null,"validatorArgs":[]},{"message":"Users.username cannot be null","type":"notNull Violation","path":"username","value":null,"origin":"CORE","instance":{"verified":false,"referral_code":null,"referrer":null,"created_at":{"val":"CURRENT_TIMESTAMP"},"updated_at":{"val":"CURRENT_TIMESTAMP"},"id":null,"email":"verified@mail.com"},"validatorKey":"is_null","validatorName":null,"validatorArgs":[]}]}
	
	===
	Time: Tue Jun 27 2023 15:04:31 GMT+0700 (Western Indonesia Time)
	Source: startVerificationErrorHandler
	Error: "EMAIL_NOT_FOUND"
	
	===
	Time: Tue Jun 27 2023 15:07:00 GMT+0700 (Western Indonesia Time)
	Source: startVerificationErrorHandler
	Error: "EMAIL_NOT_FOUND"
	
	===
	Time: Tue Jun 27 2023 15:10:37 GMT+0700 (Western Indonesia Time)
	Source: startVerificationErrorHandler
	Error: "EMAIL_NOT_FOUND"
	
	===
	Time: Tue Jun 27 2023 20:41:59 GMT+0700 (Western Indonesia Time)
	Source: startVerificationErrorHandler
	Error: "INVALID_TOKEN"
	
	===
	Time: Tue Jun 27 2023 20:42:23 GMT+0700 (Western Indonesia Time)
	Source: startVerificationErrorHandler
	Error: "INVALID_TOKEN"
	
	===
	Time: Tue Jun 27 2023 20:43:44 GMT+0700 (Western Indonesia Time)
	Source: startVerificationErrorHandler
	Error: "INVALID_TOKEN"
	
	===
	Time: Tue Jun 27 2023 20:47:22 GMT+0700 (Western Indonesia Time)
	Source: startVerificationErrorHandler
	Error: {"name":"JsonWebTokenError","message":"jwt must be provided"}
	
	===
	Time: Tue Jun 27 2023 20:48:21 GMT+0700 (Western Indonesia Time)
	Source: startVerificationErrorHandler
	Error: {"name":"TokenExpiredError","message":"jwt expired","expiredAt":"2023-06-27T09:28:16.000Z"}
	
	===
	Time: Tue Jun 27 2023 20:48:47 GMT+0700 (Western Indonesia Time)
	Source: startVerificationErrorHandler
	Error: {"name":"TokenExpiredError","message":"jwt expired","expiredAt":"2023-06-27T09:28:16.000Z"}
	
	===
	Time: Tue Jun 27 2023 20:48:57 GMT+0700 (Western Indonesia Time)
	Source: startVerificationErrorHandler
	Error: {"name":"TokenExpiredError","message":"jwt expired","expiredAt":"2023-06-27T09:28:16.000Z"}
	
	===
	Time: Tue Jun 27 2023 20:49:08 GMT+0700 (Western Indonesia Time)
	Source: startVerificationErrorHandler
	Error: {"name":"TokenExpiredError","message":"jwt expired","expiredAt":"2023-06-27T09:28:16.000Z"}
	
	===
	Time: Tue Jun 27 2023 20:49:26 GMT+0700 (Western Indonesia Time)
	Source: startVerificationErrorHandler
	Error: {"name":"TokenExpiredError","message":"jwt expired","expiredAt":"2023-06-27T09:28:16.000Z"}
	
	===
	Time: Tue Jun 27 2023 20:49:32 GMT+0700 (Western Indonesia Time)
	Source: startVerificationErrorHandler
	Error: {"name":"TokenExpiredError","message":"jwt expired","expiredAt":"2023-06-27T09:28:16.000Z"}
	
	===
	Time: Tue Jun 27 2023 20:49:32 GMT+0700 (Western Indonesia Time)
	Source: startVerificationErrorHandler
	Error: {"name":"TokenExpiredError","message":"jwt expired","expiredAt":"2023-06-27T09:28:16.000Z"}
	
	===
	Time: Tue Jun 27 2023 20:50:04 GMT+0700 (Western Indonesia Time)
	Source: startVerificationErrorHandler
	Error: {"name":"TokenExpiredError","message":"jwt expired","expiredAt":"2023-06-27T09:28:16.000Z"}
	
	===
	Time: Tue Jun 27 2023 20:50:04 GMT+0700 (Western Indonesia Time)
	Source: startVerificationErrorHandler
	Error: {"name":"TokenExpiredError","message":"jwt expired","expiredAt":"2023-06-27T09:28:16.000Z"}
	
	===
	Time: Tue Jun 27 2023 20:51:18 GMT+0700 (Western Indonesia Time)
	Source: startVerificationErrorHandler
	Error: {"name":"TokenExpiredError","message":"jwt expired","expiredAt":"2023-06-27T09:28:16.000Z"}
	
	===
	Time: Tue Jun 27 2023 20:51:20 GMT+0700 (Western Indonesia Time)
	Source: startVerificationErrorHandler
	Error: {"name":"TokenExpiredError","message":"jwt expired","expiredAt":"2023-06-27T09:28:16.000Z"}
	
	===
	Time: Tue Jun 27 2023 20:51:54 GMT+0700 (Western Indonesia Time)
	Source: startVerificationErrorHandler
	Error: {"name":"TokenExpiredError","message":"jwt expired","expiredAt":"2023-06-27T09:28:16.000Z"}
	
	===
	Time: Tue Jun 27 2023 20:52:33 GMT+0700 (Western Indonesia Time)
	Source: startVerificationErrorHandler
	Error: {"name":"TokenExpiredError","message":"jwt expired","expiredAt":"2023-06-27T09:28:16.000Z"}
	
	===
	Time: Tue Jun 27 2023 20:52:34 GMT+0700 (Western Indonesia Time)
	Source: startVerificationErrorHandler
	Error: {"name":"TokenExpiredError","message":"jwt expired","expiredAt":"2023-06-27T09:28:16.000Z"}
	
	===
	Time: Tue Jun 27 2023 20:55:02 GMT+0700 (Western Indonesia Time)
	Source: startVerificationErrorHandler
	Error: {"name":"TokenExpiredError","message":"jwt expired","expiredAt":"2023-06-27T09:28:16.000Z"}
	
	===
	Time: Tue Jun 27 2023 20:56:00 GMT+0700 (Western Indonesia Time)
	Source: startVerificationErrorHandler
	Error: {"name":"TokenExpiredError","message":"jwt expired","expiredAt":"2023-06-27T09:28:16.000Z"}
	
	===
	Time: Tue Jun 27 2023 20:56:14 GMT+0700 (Western Indonesia Time)
	Source: startVerificationErrorHandler
	Error: {"name":"TokenExpiredError","message":"jwt expired","expiredAt":"2023-06-27T09:28:16.000Z"}
	
	===
	Time: Tue Jun 27 2023 20:57:27 GMT+0700 (Western Indonesia Time)
	Source: startVerificationErrorHandler
	Error: {"name":"TokenExpiredError","message":"jwt expired","expiredAt":"2023-06-27T09:28:16.000Z"}
	
	===
	Time: Tue Jun 27 2023 20:57:28 GMT+0700 (Western Indonesia Time)
	Source: startVerificationErrorHandler
	Error: {"name":"TokenExpiredError","message":"jwt expired","expiredAt":"2023-06-27T09:28:16.000Z"}
	
	===
	Time: Tue Jun 27 2023 20:57:34 GMT+0700 (Western Indonesia Time)
	Source: startVerificationErrorHandler
	Error: {"name":"TokenExpiredError","message":"jwt expired","expiredAt":"2023-06-27T09:28:16.000Z"}
	
	===
	Time: Tue Jun 27 2023 21:02:31 GMT+0700 (Western Indonesia Time)
	Source: startVerificationErrorHandler
	Error: {"name":"JsonWebTokenError","message":"jwt malformed"}
	
	===
	Time: Tue Jun 27 2023 21:02:33 GMT+0700 (Western Indonesia Time)
	Source: startVerificationErrorHandler
	Error: {"name":"JsonWebTokenError","message":"jwt malformed"}
	
	===
	Time: Tue Jun 27 2023 21:02:34 GMT+0700 (Western Indonesia Time)
	Source: startVerificationErrorHandler
	Error: {"name":"JsonWebTokenError","message":"jwt malformed"}
	
	===
	Time: Tue Jun 27 2023 21:02:34 GMT+0700 (Western Indonesia Time)
	Source: startVerificationErrorHandler
	Error: {"name":"JsonWebTokenError","message":"jwt malformed"}
	
	===
	Time: Tue Jun 27 2023 21:02:34 GMT+0700 (Western Indonesia Time)
	Source: startVerificationErrorHandler
	Error: {"name":"JsonWebTokenError","message":"jwt malformed"}
	
	===
	Time: Tue Jun 27 2023 21:02:34 GMT+0700 (Western Indonesia Time)
	Source: startVerificationErrorHandler
	Error: {"name":"JsonWebTokenError","message":"jwt malformed"}
	
	===
	Time: Tue Jun 27 2023 21:02:35 GMT+0700 (Western Indonesia Time)
	Source: startVerificationErrorHandler
	Error: {"name":"JsonWebTokenError","message":"jwt malformed"}
	
	===
	Time: Tue Jun 27 2023 21:02:55 GMT+0700 (Western Indonesia Time)
	Source: startVerificationErrorHandler
	Error: {"name":"JsonWebTokenError","message":"jwt malformed"}
	
	===
	Time: Tue Jun 27 2023 21:03:38 GMT+0700 (Western Indonesia Time)
	Source: startVerificationErrorHandler
	Error: {"name":"JsonWebTokenError","message":"jwt malformed"}
	
	===
	Time: Tue Jun 27 2023 21:03:38 GMT+0700 (Western Indonesia Time)
	Source: startVerificationErrorHandler
	Error: {"name":"JsonWebTokenError","message":"jwt malformed"}
	
	===
	Time: Tue Jun 27 2023 21:03:41 GMT+0700 (Western Indonesia Time)
	Source: startVerificationErrorHandler
	Error: {"name":"JsonWebTokenError","message":"jwt malformed"}
	
	===
	Time: Tue Jun 27 2023 21:03:52 GMT+0700 (Western Indonesia Time)
	Source: startVerificationErrorHandler
	Error: {"name":"JsonWebTokenError","message":"jwt malformed"}
	
	===
	Time: Tue Jun 27 2023 21:04:05 GMT+0700 (Western Indonesia Time)
	Source: startVerificationErrorHandler
	Error: {"name":"JsonWebTokenError","message":"jwt malformed"}
	
	===
	Time: Tue Jun 27 2023 21:04:08 GMT+0700 (Western Indonesia Time)
	Source: startVerificationErrorHandler
	Error: {"name":"JsonWebTokenError","message":"jwt malformed"}
	
	===
	Time: Tue Jun 27 2023 21:05:40 GMT+0700 (Western Indonesia Time)
	Source: startVerificationErrorHandler
	Error: {"name":"JsonWebTokenError","message":"jwt malformed"}
	
	===
	Time: Tue Jun 27 2023 21:05:41 GMT+0700 (Western Indonesia Time)
	Source: startVerificationErrorHandler
	Error: {"name":"JsonWebTokenError","message":"jwt malformed"}
	
	===
	Time: Tue Jun 27 2023 21:05:51 GMT+0700 (Western Indonesia Time)
	Source: startVerificationErrorHandler
	Error: {"name":"JsonWebTokenError","message":"jwt malformed"}
	
	===
	Time: Tue Jun 27 2023 21:05:57 GMT+0700 (Western Indonesia Time)
	Source: startVerificationErrorHandler
	Error: {"name":"JsonWebTokenError","message":"jwt malformed"}
	
	===
	Time: Tue Jun 27 2023 21:06:41 GMT+0700 (Western Indonesia Time)
	Source: startVerificationErrorHandler
	Error: {"name":"JsonWebTokenError","message":"jwt malformed"}
	
	===
	Time: Tue Jun 27 2023 21:06:53 GMT+0700 (Western Indonesia Time)
	Source: startVerificationErrorHandler
	Error: {"name":"JsonWebTokenError","message":"jwt malformed"}
	
	===
	Time: Tue Jun 27 2023 21:07:18 GMT+0700 (Western Indonesia Time)
	Source: startVerificationErrorHandler
	Error: {"name":"JsonWebTokenError","message":"jwt malformed"}
	
	===
	Time: Tue Jun 27 2023 21:07:19 GMT+0700 (Western Indonesia Time)
	Source: startVerificationErrorHandler
	Error: {"name":"JsonWebTokenError","message":"jwt malformed"}
	
	===
	Time: Tue Jun 27 2023 21:07:20 GMT+0700 (Western Indonesia Time)
	Source: startVerificationErrorHandler
	Error: {"name":"JsonWebTokenError","message":"jwt malformed"}
	
	===
	Time: Tue Jun 27 2023 21:07:20 GMT+0700 (Western Indonesia Time)
	Source: startVerificationErrorHandler
	Error: {"name":"JsonWebTokenError","message":"jwt malformed"}
	